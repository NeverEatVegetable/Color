{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/test/unitTest/game/FrameSyncExecutor.test.ts"],"names":["assert","FrameSyncExecutor","EPlayerInputFrameType","describe","test","onSyncOneFrame","fse","msg","_syncing","ok","syncFrame","frameIndex","_syncOneFrameHandler","nextSyncFrameIndex","maxSyncFrameIndex","allFrames","length","prevSyncFrameIndexArrIndex","afterFramesMsg","buildAfterFrames","afterEndFrameIndex","stateFrameIndex","afterFrames","playerInputs","addPlayerInpFrame","Operates","inp","operates","playerId"],"mappings":"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","sourcesContent":["\nimport { assert } from 'chai';\nimport { FrameSyncExecutor } from \"../../../src/gameServer/FrameSyncExecutor\";\nimport { MsgNotifySyncFrame } from '../../../src/shared/gameClient/protocols/MsgNotifySyncFrame';\nimport { EPlayerInputFrameType } from '../../../src/shared/tsgf/room/IGameFrame';\n\ndescribe('FrameSyncExecutor', function () {\n\n    test('同步1个空帧', async function () {\n        let onSyncOneFrame: ((msg: MsgNotifySyncFrame) => void) | null = null;\n        let fse = new FrameSyncExecutor((msg) => {\n            if (onSyncOneFrame) onSyncOneFrame(msg);\n        });\n        fse._syncing = true;//模拟已经开始同步\n\n        onSyncOneFrame = (msg) => {\n            assert.ok(msg.syncFrame.frameIndex === 0, `应该为0, 实际为${msg.syncFrame.frameIndex}`);\n        };\n        //运行1帧后\n        fse._syncOneFrameHandler();\n        //验证相关索引是否正确\n        assert.ok(fse.nextSyncFrameIndex === 1, `应为1,实际为${fse.nextSyncFrameIndex}`);\n        assert.ok(fse.maxSyncFrameIndex === 0, `应为0,实际为${fse.maxSyncFrameIndex}`);\n        assert.ok(fse.allFrames.length == 0, `应为0,实际为${fse.allFrames.length}`);\n        assert.ok(fse.prevSyncFrameIndexArrIndex === -1, `应为-1,实际为${fse.maxSyncFrameIndex}`);\n        //验证追帧信息是否正确\n        let afterFramesMsg = fse.buildAfterFrames();\n        assert.ok(afterFramesMsg.afterEndFrameIndex === 0, \"应为0,实际为\" + afterFramesMsg.afterEndFrameIndex);\n        assert.ok(afterFramesMsg.stateFrameIndex === -1, \"应为-1,实际为\" + afterFramesMsg.stateFrameIndex);\n        assert.ok(afterFramesMsg.afterFrames.length === 0, \"应为0,实际为\" + afterFramesMsg.afterFrames.length);\n\n    });\n\n\n    test('同步1空帧,输入,再同步1帧', async function () {\n        let onSyncOneFrame: ((msg: MsgNotifySyncFrame) => void) | null = null;\n        let fse = new FrameSyncExecutor((msg) => {\n            if (onSyncOneFrame) onSyncOneFrame(msg);\n        });\n        fse._syncing = true;//模拟已经开始同步\n\n        onSyncOneFrame = (msg) => {\n            //第一个空帧\n            assert.ok(msg.syncFrame.frameIndex === 0, `应该为0, 实际为${msg.syncFrame.frameIndex}`);\n            assert.ok(msg.syncFrame.playerInputs === null, `应该为null, 实际为${msg.syncFrame.playerInputs}`);\n        };\n        //同步第1个帧\n        fse._syncOneFrameHandler();\n        //验证相关索引是否正确\n        assert.ok(fse.nextSyncFrameIndex === 1, `应为1,实际为${fse.nextSyncFrameIndex}`);\n        assert.ok(fse.maxSyncFrameIndex === 0, `应为0,实际为${fse.maxSyncFrameIndex}`);\n        assert.ok(fse.prevSyncFrameIndexArrIndex === -1, `应为-1,实际为${fse.maxSyncFrameIndex}`);\n        assert.ok(fse.allFrames.length == 0, `应为0,实际为${fse.allFrames.length}`);\n        //验证追帧信息是否正确\n        let afterFramesMsg = fse.buildAfterFrames();\n        assert.ok(afterFramesMsg.afterEndFrameIndex === 0, \"应为0,实际为\" + afterFramesMsg.afterEndFrameIndex);\n        assert.ok(afterFramesMsg.stateFrameIndex === -1, \"应为-1,实际为\" + afterFramesMsg.stateFrameIndex);\n        assert.ok(afterFramesMsg.afterFrames.length === 0, \"应为0,实际为\" + afterFramesMsg.afterFrames.length);\n\n        fse.addPlayerInpFrame(\"1\", EPlayerInputFrameType.Operates,\n            (inp) => inp.operates = [{ test: \"t1\" }]);\n        onSyncOneFrame = (msg) => {\n            //第2个,应该为输入帧\n            assert.ok(msg.syncFrame.frameIndex == 1,\n                `应为1,实际为${msg.syncFrame.frameIndex}`);\n            assert.ok(msg.syncFrame.playerInputs,\n                `应不为null,实际为${msg.syncFrame.playerInputs}`);\n            assert.ok(msg.syncFrame.playerInputs!.length === 1,\n                `应为1,实际为${msg.syncFrame.playerInputs!.length}`);\n            assert.ok(msg.syncFrame.playerInputs![0].playerId === '1',\n                `应为1,实际为${msg.syncFrame.playerInputs![0].playerId}`);\n            assert.ok(msg.syncFrame.playerInputs![0].operates!.length === 1,\n                `应为1,实际为${msg.syncFrame.playerInputs![0].operates!.length}`);\n            assert.ok(msg.syncFrame.playerInputs![0].operates![0].test === 't1',\n                `应为t1,实际为${msg.syncFrame.playerInputs![0].operates![0].test}`);\n        };\n        //同步第2个帧\n        fse._syncOneFrameHandler();\n        //验证帧执行器的相关索引是否正确\n        assert.ok(fse.nextSyncFrameIndex === 2, \"应为2,实际为\" + fse.nextSyncFrameIndex);\n        assert.ok(fse.maxSyncFrameIndex === 1, \"应为1,实际为\" + fse.maxSyncFrameIndex);\n        assert.ok(fse.allFrames.length == 1, `应为1,实际为${fse.allFrames.length}`);\n        assert.ok(fse.prevSyncFrameIndexArrIndex === 0, `应为0,实际为${fse.maxSyncFrameIndex}`);\n        //验证追帧信息是否正确\n        afterFramesMsg = fse.buildAfterFrames();\n        assert.ok(afterFramesMsg.afterEndFrameIndex === 1, \"应为1,实际为\" + afterFramesMsg.afterEndFrameIndex);\n        assert.ok(afterFramesMsg.stateFrameIndex === -1, \"应为-1,实际为\" + afterFramesMsg.stateFrameIndex);\n        assert.ok(afterFramesMsg.afterFrames.length === 1, \"应为1,实际为\" + afterFramesMsg.afterFrames.length);\n    });\n\n})"]}