{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/ServerConfig.ts"],"names":["RunServerKey"],"mappings":";;;;;;;;;;;;;AACA;;AAuBA;;AAuCA;;AAKA;;;AAiBA;8BACYA,Y,0BAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;eAAAA,Y;;AAWZ;AACA;AACA;;AAsBA;;AASA;;AAQA","sourcesContent":["\n/**servers的总配置对象*/\nexport interface IServerConfig {\n    /**redis配置 */\n    redisConfig: RedisConfig;\n    /**所有数据库连接配置[当前服务端版本未启用数据库功能]*/\n    connString?: ConnStringMgr;\n    /**游戏服务器集群管理服务配置*/\n    gameServerCluster: IClusterCfg;\n    /**匹配服务器集群管理服务配置*/\n    matchServerCluster: IClusterCfg;\n    /**大厅服务配置*/\n    hallServer: IHallServerCfg;\n    /**游戏服务器*/\n    gameServer: IGameServerCfg;\n    /**匹配服务器*/\n    matchServer: IMatchServerCfg;\n    /**示例应用的用户系统接入服务 配置*/\n    demoServer: IDemoServerCfg;\n    /**当前实例要启动哪些服务*/\n    runServer: RunServerKey[];\n}\n\n\n/** redis连接配置 */\nexport interface RedisConfig {\n    /**是否有ssl */\n    ssl?: boolean;\n    /**主机地址,ip或者域名 */\n    host?: string;\n    /**端口 */\n    port?: number;\n    /** 用户名, 没有认证放空 */\n    username?: string;\n    /** 密码, 没有认证或密码放空, 有的话一定要有username,否则无效 */\n    password?: string;\n    /**使用的数据库索引,一般默认使用0 */\n    database?: number;\n    /**使用单机内存来简单实现，免去简单场景依赖redis的情况*/\n    useMemRedis?: boolean;\n}\n\nexport interface BaseServerCfg {\n    port: number;\n}\n\nexport interface IHallServerCfg extends BaseServerCfg {\n    /**连接的游戏集群url*/\n    gameClusterServerUrl: string;\n    /**连接游戏集群的终端id*/\n    gameClusterTerminalId: string;\n    /**连接游戏集群的终端秘钥*/\n    gameClusterTerminalKey: string;\n}\n\n\nexport interface ConnStringMgr {\n    appDb: DbConnStringCfg;\n}\nexport interface DbConnStringCfg {\n    mysql: string\n}\n\n/**集群节点配置*/\nexport interface IClusterNodeCfg {\n    clusterNodeId: string;\n    clusterKey: string;\n}\n/**集群终端配置*/\nexport interface IClusterTerminalCfg {\n    terminalId: string;\n    terminalKey: string;\n}\n\nexport interface IClusterCfg extends BaseServerCfg {\n    /**配置所有可以连接集群的节点 */\n    nodeList: IClusterNodeCfg[];\n    /**配置所有可以连接集群的终端 */\n    terminalList?: IClusterTerminalCfg[];\n}\nexport interface IDemoServerCfg extends BaseServerCfg {\n    /**所连的大厅服务器地址*/\n    hallServerUrl:string;\n}\n\n/**所有服务器类型标识*/\nexport enum RunServerKey {\n    HallServer = \"HallServer\",\n    GameServerCluster = \"GameServerCluster\",\n    MatchServerCluster = \"MatchServerCluster\",\n    GameServer = \"GameServer\",\n    MatchServer = \"MatchServer\",\n    DemoServer = \"DemoServer\",\n}\n\n \n\n/**\n * 游戏服务器配置\n */\nexport interface IGameServerCfg {\n    /**集群的内网连接地址*/\n    clusterWSUrl: string;\n    /**集群节点ID（也可以视为服务器ID），集群内唯一，需要和集群服务的配置里一致 */\n    clusterNodeId: string;\n    /**本节点的集群连接密钥，需要和集群服务的配置里一致 */\n    clusterKey: string;\n\n    /**服务器名称 */\n    serverName: string;\n    /**服务器外网连接地址 */\n    serverUrl: string;\n    /**服务侦听的端口*/\n    port: number;\n    /**拓展数据,不同的服务器不同的版本各不相同,将输出给获取服务器列表的客户端 */\n    extendData?: any;\n\n    /**游戏服务器分配规则配置*/\n    allotRules?: IGameServerAllotRuleCfg;\n}\n\n/**限制房间数量的规则*/\nexport interface AllotLimitRoomCountRule {\n    /**匹配房间类型,放空表示不限制本项*/\n    roomType?: string;\n    /**匹配房间最大玩家数,放空表示不限制本项*/\n    maxPlayers?: number;\n    /**限制符合本条件的房间数量(多个匹配则取最小值)*/\n    limitRoomCount: number;\n}\n/**各分配规则定义*/\nexport interface IGameServerAllotRuleCfg{\n    /**限制房间数量的规则列表, 如果配置了, 没符合规则的不会分配到本服务器, 匹配中多份配置则会取数量最小的限制值*/\n    limitRoomCountRules?: AllotLimitRoomCountRule[];\n}\n\n\n\n/**匹配服务器配置*/\nexport interface IMatchServerCfg {\n    /**集群的内网连接地址*/\n    clusterWSUrl: string;\n    /**集群节点ID（也可以视为服务器ID），集群内唯一，需要和集群服务的配置里一致 */\n    clusterNodeId: string;\n    /**本节点的集群连接密钥，需要和集群服务的配置里一致 */\n    clusterKey: string;\n\n    /**服务器名称 */\n    serverName: string;\n\n    /**连接的游戏集群url*/\n    gameClusterServerUrl: string;\n    /**连接游戏集群使用的终端id*/\n    gameClusterTerminalId: string;\n    /**连接游戏集群使用的终端秘钥*/\n    gameClusterTerminalKey: string;\n}\n"]}