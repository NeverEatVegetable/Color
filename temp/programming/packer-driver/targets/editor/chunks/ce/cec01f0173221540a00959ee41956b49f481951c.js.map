{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/tsgf-sdk/test/unitTest/Room.test.ts"],"names":["initGame","assert","describe","test","initRet1","ok","succ","err","z1SDK","data","initRet2","z2SDK","z1CreateRet","room","createRoom","roomName","maxPlayers","ownerPlayerId","playerId","isPrivate","getRet","getOnlineRoomInfo","roomId","dispose","filterRooms","roomNameFullMatch","rooms","length"],"mappings":"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","sourcesContent":["\n\nimport './Env';\nimport { initGame } from \"./TestUnit\";\nimport { assert } from 'chai';\nimport { ERoomMsgRecvType, IRecvRoomMsg } from '../../src/tsgf/room/IRoomMsg';\nimport { delay } from '../../src/tsgf/Utils';\nimport { ISingleMatcherParams, MatcherKeys } from '../../src/tsgf/match/Models';\nimport { logger } from '../../src/tsgf/logger';\nimport { ErrorCodes } from '../../src/tsgf/Result';\n\n\ndescribe(\"房间\", () => {\n    test('获取房间在线信息', async function () {\n\n        let initRet1 = await initGame('获取房间在线信息_z1', 'z1');\n        assert.ok(initRet1.succ, initRet1.err);\n        let z1SDK = initRet1.data!;\n        let initRet2 = await initGame('获取房间在线信息_z2', 'z2');\n        assert.ok(initRet2.succ, initRet2.err);\n        let z2SDK = initRet2.data!;\n\n        let z1CreateRet = await z1SDK.room.createRoom({}, {\n            roomName: 'test',\n            maxPlayers: 2,\n            ownerPlayerId: initRet1.data!.playerId,\n            isPrivate: true,\n        });\n        assert.ok(z1CreateRet.succ, z1CreateRet.err);\n\n        let getRet = await z2SDK.room.getOnlineRoomInfo(z1CreateRet.data!.roomId);\n        assert.ok(getRet.succ, getRet.err);\n\n        await z1SDK.dispose();\n        await z2SDK.dispose();\n\n    }, 600000);\n\n    test('筛选房间', async function () {\n\n        let initRet1 = await initGame('筛选房间_z1', 'z1');\n        assert.ok(initRet1.succ, initRet1.err);\n        let z1SDK = initRet1.data!;\n        let initRet2 = await initGame('筛选房间_z2', 'z2');\n        assert.ok(initRet2.succ, initRet2.err);\n        let z2SDK = initRet2.data!;\n\n        let z1CreateRet = await z1SDK.room.createRoom({}, {\n            roomName: 'test',\n            maxPlayers: 2,\n            ownerPlayerId: initRet1.data!.playerId,\n            isPrivate: true,\n        });\n        assert.ok(z1CreateRet.succ, z1CreateRet.err);\n\n        let getRet = await z2SDK.room.filterRooms({\n            roomNameFullMatch: 'test',\n        });\n        assert.ok(getRet.succ, getRet.err);\n        assert.ok(getRet.data!.rooms.length === 1, '应该匹配到1个');\n\n        await z1SDK.dispose();\n        await z2SDK.dispose();\n\n    }, 600000);\n\n});"]}