{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/shared/tsgf/room/IRoomInfo.ts"],"names":["ERoomCreateType","EFrameSyncState","EPrivateRoomJoinMode"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA;iCACYA,e,0BAAAA,e;AAAAA,QAAAA,e,CAAAA,e;AAAAA,QAAAA,e,CAAAA,e;eAAAA,e;;AAOZ;;;iCACYC,e,0BAAAA,e;AAAAA,QAAAA,e,CAAAA,e;AAAAA,QAAAA,e,CAAAA,e;eAAAA,e;;AAOZ;;;sCACYC,oB,0BAAAA,oB;AAAAA,QAAAA,oB,CAAAA,oB;AAAAA,QAAAA,oB,CAAAA,oB;AAAAA,QAAAA,oB,CAAAA,oB;eAAAA,oB;;AASZ;;AAyDA;;AAoBA;;AAgCA;;AAOA;;AAQA;;AAWA;;AAQA;;AASA;;AA0BA;;AA2BA","sourcesContent":["import { IPlayerInfo } from \"../player/IPlayerInfo\";\n\n/**创建房间的方式*/\nexport enum ERoomCreateType {\n    /**调用创建房间方法创建的*/\n    COMMON_CREATE = 0,\n    /**由匹配创建的*/\n    MATCH_CREATE = 1,\n}\n\n/**帧同步状态*/\nexport enum EFrameSyncState {\n    /**未开始帧同步*/\n    STOP = 0,\n    /**已开始帧同步*/\n    START = 1,\n}\n\n/**私有房间的加入模式*/\nexport enum EPrivateRoomJoinMode {\n    /**知道房间id即可加入*/\n    roomIdJoin = 0,\n    /**禁止加入*/\n    forbidJoin = 1,\n    /**使用密码加入*/\n    password = 2,\n}\n\n/**房间信息*/\nexport interface IRoomInfo {\n    /**房间ID*/\n    roomId: string;\n    /**房间名称*/\n    roomName: string;\n    /**房主玩家ID，创建后，只有房主玩家的客户端才可以调用相关的管理操作*/\n    ownerPlayerId: string;\n    /**是否私有房间，私有房间不参与匹配*/\n    isPrivate: boolean;\n    /**私有房间的加入模式*/\n    privateRoomJoinMode?: EPrivateRoomJoinMode;\n    /**如果参与匹配,则使用的匹配器标识*/\n    matcherKey?: string;\n    /**创建房间的方式*/\n    createType: ERoomCreateType;\n    /**进入房间的最大玩家数量*/\n    maxPlayers: number;\n    /**房间类型自定义字符串*/\n    roomType?: string;\n    /**自定义房间属性字符串*/\n    customProperties?: string;\n\n    /**如果当前房间在匹配 (房间全玩家匹配),则有匹配请求id*/\n    allPlayerMatchReqId?: string;\n\n    /**玩家列表*/\n    playerList: IPlayerInfo[];\n    /**队伍列表,如果创建房间时有传入队伍参数,则会有内容,否则为[]*/\n    teamList: ITeamInfo[];\n    /**[固定数量的队伍] 直接用数量自动生成所有固定队伍配置, 房间ID将从 '1' 开始到 fixedTeamCount, \n     * 还需要传 fixedTeamMinPlayers 和 fixedTeamMaxPlayers, 或者使用 fixedTeamInfoList 完全自定义 */\n    fixedTeamCount?: number;\n    /**[自由数量的队伍] 指定每支队伍的最少玩家数, 同时还需要指定 freeTeamMaxPlayers*/\n    freeTeamMinPlayers?: number;\n    /**[自由数量的队伍] 指定每支队伍的最大玩家数, 同时还需要指定 freeTeamMinPlayers*/\n    freeTeamMaxPlayers?: number;\n\n    /**同步帧率*/\n    frameRate: number;\n    /**帧同步状态*/\n    frameSyncState: EFrameSyncState;\n    /**创建房间时间戳（单位毫秒， new Date(createTime) 可获得时间对象）*/\n    createTime: number;\n    /**开始游戏时间戳（单位毫秒， new Date(createTime) 可获得时间对象）,0表示未开始*/\n    startGameTime: number;\n\n    /**保留空房间毫秒数,重新进人再退出后重新计时,放空或为0表示不保留空房间,直接销毁*/\n    retainEmptyRoomTime?: number;\n    /**是否为房主保留固定位置,即使房主离开后\"满房\"还是可以加入,即房主离开后房间真实最大人数=maxPlayers-1*/\n    retainOwnSeat: boolean;\n\n\n    /** 随机要求玩家同步状态给服务端的间隔毫秒（不设置和设0表示不开启）,方便大大缩短追帧时间，但要求客户端实现状态数据全量同步，每隔一段时间要求一个玩家上报自己的全量状态数据，之后的追帧将从本状态开始同步+追帧*/\n    randomRequirePlayerSyncStateInvMs?: number;\n}\n\n/**队伍的配置参数*/\nexport interface ITeamParams {\n\n    /**[固定数量的队伍] 直接用数量自动生成所有固定队伍配置, 房间ID将从 '1' 开始到 fixedTeamCount, \n     * 还需要传 fixedTeamMinPlayers 和 fixedTeamMaxPlayers, 或者使用 fixedTeamInfoList 完全自定义 */\n    fixedTeamCount?: number;\n    /**[固定数量的队伍] 每支队伍最少玩家数(包含), 没传默认为1*/\n    fixedTeamMinPlayers?: number;\n    /**[固定数量的队伍] 每支队伍最大玩家数(包含), 没传默认为9*/\n    fixedTeamMaxPlayers?: number;\n    /**[固定数量的队伍] 使用传入的队伍id等信息来定义所有队伍, 并忽略 fixedTeam* 的其他参数*/\n    fixedTeamInfoList?: ITeamInfo[];\n\n    /**[自由数量的队伍] 指定每支队伍的最少玩家数, 同时还需要指定 freeTeamMaxPlayers*/\n    freeTeamMinPlayers?: number;\n    /**[自由数量的队伍] 指定每支队伍的最大玩家数, 同时还需要指定 freeTeamMinPlayers*/\n    freeTeamMaxPlayers?: number;\n\n}\n\n/**创建房间的参数*/\nexport interface ICreateRoomPara extends ITeamParams {\n    /**房间名字，查询房间和加入房间时会获取到*/\n    roomName: string;\n    /**房主玩家ID，创建后，只有房主玩家的客户端才可以调用相关的管理操作, 如果不想任何人操作,可以直接设置为''*/\n    ownerPlayerId: string;\n    /**进入房间的最大玩家数量*/\n    maxPlayers: number;\n    /**是否私有房间，私有房间不参与匹配，同时需要给 privateRoomJoinMode 赋值，默认为使用房间id即可加入*/\n    isPrivate: boolean;\n    /**私有房间的加入模式, 私有房间则需要赋值, 默认为使用房间id即可加入*/\n    privateRoomJoinMode?: EPrivateRoomJoinMode;\n    /**如果私有房间的加入模式是密码, 则必填本密码字段*/\n    privateRoomPassword?: string;\n\n    /**如果参与匹配,则使用的匹配器标识*/\n    matcherKey?: string;\n    /**自定义房间属性字符串*/\n    customProperties?: string;\n    /**房间类型自定义字符串*/\n    roomType?: string;\n    /**指定房间ID,必须全局唯一, 放空则会自动生成guid*/\n    roomId?: string;\n    /**保留空房间毫秒数,重新进人再退出后重新计时,放空或为0表示不保留空房间,直接销毁*/\n    retainEmptyRoomTime?: number;\n    /**是否为房主保留固定位置,即使房主离开后\"满房\"还是可以加入,即房主离开后房间真实最大人数=maxPlayers-1*/\n    retainOwnSeat?: boolean;\n    \n    /** 随机要求玩家同步状态给服务端的间隔毫秒（不设置和设0表示不开启）,方便大大缩短追帧时间，但要求客户端实现状态数据全量同步，每隔一段时间要求一个玩家上报自己的全量状态数据，之后的追帧将从本状态开始同步+追帧*/\n    randomRequirePlayerSyncStateInvMs?: number;\n}\n\n/**房间列表的筛选参数*/\nexport interface IRoomsFilterPara {\n    roomType?: string;\n    maxPlayers?: number;\n    roomNameLike?: string;\n    roomNameFullMatch?: string;\n}\n/**房间筛选结果*/\nexport interface IRoomsFilterRes {\n    /**符合条件并按照范围返回的房间列表*/\n    rooms: IRoomOnlineInfo[];\n    /**符合的总数量*/\n    count: number;\n}\n\n/**获取符合条件的房间或创建一个*/\nexport interface IGetOrCreateRoomPara {\n    /**[至少要有一个]匹配房间配型*/\n    matchRoomType?: boolean;\n    /**[至少要有一个]匹配房间最大玩家数*/\n    matchMaxPlayers?: boolean;\n    /**最多匹配的房间数量, 放空则默认为3*/\n    matchLimitRoomCount?: number;\n    /**匹配的信息来源,都匹配不上,也将使用本参数进行创建房间*/\n    createRoomPara: ICreateRoomPara;\n}\n/**获取符合条件的房间或创建一个的结果数据*/\nexport interface IGetOrCreateRoomRsp {\n    /**有匹配条件的房间*/\n    matchRoomOnlineInfoList?: IRoomOnlineInfo[];\n    /**没匹配到但创建了房间的信息*/\n    createRoomOnlineInfo?: IRoomOnlineInfo;\n}\n\n/**加入房间参数*/\nexport interface IJoinRoomPara {\n    roomId: string;\n    /**同时指定加入的队伍ID*/\n    teamId?: string;\n    /**私有房间是密码加入模式时,需要提供密码*/\n    password?: string;\n}\n\n/**房间在线信息, 给未加入房间的客户端的房间基本信息*/\nexport interface IRoomOnlineInfo {\n    /**房间ID*/\n    roomId: string;\n    /**房主玩家ID，创建后，只有房主玩家的客户端才可以调用相关的管理操作*/\n    ownerPlayerId: string;\n    /**房间名称*/\n    roomName: string;\n    /**房间类型自定义字符串*/\n    roomType?: string;\n    /**房间最大玩家数*/\n    maxPlayers: number;\n    /**房间当前空位数(可加多少个玩家)*/\n    emptySeats: number;\n    /**是否私有房间，私有房间不参与匹配, 并且要符合 privateRoomJoinMode 的加入方式*/\n    isPrivate: boolean;\n    /**私有房间的加入模式*/\n    privateRoomJoinMode?: EPrivateRoomJoinMode;\n\n    /**游戏服务器的连接地址, 如果为undefined则说明服务器当前不可用*/\n    gameServerUrl?: string;\n    /**当前游戏服务器在线人数*/\n    currGameServerPlayers: number;\n}\n\n\n/**修改房间信息的参数*/\nexport interface IChangeRoomPara {\n    /**[不修改请不要赋值] 房间名称*/\n    roomName?: string;\n    /**[不修改请不要赋值] 是否私有房间，私有房间不参与匹配，同时需要给 privateRoomJoinMode 赋值，否则默认为使用房间id即可加入*/\n    isPrivate?: boolean;\n    /**[不修改请不要赋值] 私有房间的加入模式, 私有房间则需要赋值, 默认为使用房间id即可加入*/\n    privateRoomJoinMode?: EPrivateRoomJoinMode;\n    /**[不修改请不要赋值] 如果私有房间的加入模式是密码, 则必填本密码字段*/\n    privateRoomPassword?: string;\n    /**[不修改请不要赋值] 自定义房间属性字符串*/\n    customProperties?: string;\n}\n\n\nexport interface ITeamInfo {\n    /**队伍 ID, 房间内唯一*/\n    id: string;\n    /**队伍名称*/\n    name: string;\n    /**队伍最小人数*/\n    minPlayers: number;\n    /**队伍最大人数*/\n    maxPlayers: number;\n}\n\n\n/**队伍的玩家id列表*/\nexport interface ITeamPlayerIds {\n    /**所属队伍id,如果没有队伍则为 undefined*/\n    teamId?: string;\n    /**玩家id列表*/\n    playerIds: string[];\n}"]}