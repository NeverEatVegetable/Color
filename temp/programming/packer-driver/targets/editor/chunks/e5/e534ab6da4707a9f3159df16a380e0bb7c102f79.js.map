{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/test/unitTest/tsgf/Utils.test.ts"],"names":["assert","delay","arrGroup","arrSkipAndLimit","describe","test","console","log","Date","toLocaleString","r","key","name","i","ok","size","get","length","undefined","join"],"mappings":"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","sourcesContent":["import { assert } from \"chai\";\nimport { delay, arrGroup, arrSkipAndLimit } from \"../../../src/shared/tsgf/Utils\";\n\n\ndescribe(\"基础方法\", () => {\n    test('delay', async () => {\n        console.log(new Date().toLocaleString());\n        await delay(5000);\n        console.log(new Date().toLocaleString());\n    }, 60000);\n\n\n    test('groupByArr', async () => {\n        let r = arrGroup([\n            { key: '1', name: 'a' },\n            { key: '1', name: 'b' },\n            { key: '2', name: 'c' },\n        ], i => i.key);\n        assert.ok(r.size === 2, '应为2实为' + r.size);\n        assert.ok(r.get('1')?.length === 2, '应为2实为' + r.get('1')?.length);\n        assert.ok(r.get('2')?.length === 1, '应为1实为' + r.get('2')?.length);\n    }, 60000);\n    \n    test('arrSkipAndLimit', async () => {\n        let r = arrSkipAndLimit([1,2,3], undefined,undefined);\n        assert.ok(r.length === 3, '应为3实为' + r.length);\n        assert.ok(r.join(',') === '1,2,3', '应为1,2,3实为' + r.join(','));\n        r = arrSkipAndLimit([1,2,3], 0,undefined);\n        assert.ok(r.length === 3, '应为3实为' + r.length);\n        assert.ok(r.join(',') === '1,2,3', '应为1,2,3实为' + r.join(','));\n        r = arrSkipAndLimit([1,2,3], 1,undefined);\n        assert.ok(r.length === 2, '应为2实为' + r.length);\n        assert.ok(r.join(',') === '2,3', '应为2,3实为' + r.join(','));\n        r = arrSkipAndLimit([1,2,3], undefined,1);\n        assert.ok(r.length === 1, '应为1实为' + r.length);\n        assert.ok(r.join(',') === '1', '应为1实为' + r.join(','));\n        r = arrSkipAndLimit([1,2,3], 1,1);\n        assert.ok(r.length === 1, '应为1实为' + r.length);\n        assert.ok(r.join(',') === '2', '应为2实为' + r.join(','));\n        r = arrSkipAndLimit([1,2,3], 1,3);\n        assert.ok(r.length === 2, '应为2实为' + r.length);\n        assert.ok(r.join(',') === '2,3', '应为2,3实为' + r.join(','));\n        r = arrSkipAndLimit([1,2,3], 3,1);\n        assert.ok(r.length === 0, '应为0实为' + r.length);\n        assert.ok(r.join(',') === '', '应为\"\"实为' + r.join(','));\n    }, 60000);\n\n});"]}