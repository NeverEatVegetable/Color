{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/gameServerCluster/api/ApiTerminalDismissRoom.ts"],"names":["call","regInfo","getGameClusterServer","roomMgr","dismissRoom","req","roomId","error","code","RoomNotFound","ret","notifyGameServerDismissRoom","succ","err","roomOnlineInfo","buildRoomOnlineInfo","ErrorCodes"],"mappings":";;;;;;;;;;;;;;;;;;;;;qBAIe,gBAAgBA,IAAhB,EAA0F;AACrG;AACA,QAAIC,OAAO,GAAGD,IAAI,CAACE,oBAAL,GAA4BC,OAA5B,CAAoCC,WAApC,CAAgDJ,IAAI,CAACK,GAAL,CAASC,MAAzD,CAAd;;AACA,QAAI,CAACL,OAAL,EAAc;AACV,aAAO,MAAMD,IAAI,CAACO,KAAL,CAAW,WAAX,EAAwB;AAAEC,QAAAA,IAAI,EAAE;AAAA;AAAA,sCAAWC;AAAnB,OAAxB,CAAb;AACH,KALoG,CAMrG;;;AACA,QAAIC,GAAG,GAAG,MAAMV,IAAI,CAACE,oBAAL,GAA4BS,2BAA5B,CAAwDV,OAAxD,CAAhB;;AACA,QAAI,CAACS,GAAG,CAACE,IAAT,EAAe;AACX,aAAO,MAAMZ,IAAI,CAACO,KAAL,CAAWG,GAAG,CAACG,GAAf,EAAoB;AAAEL,QAAAA,IAAI,EAAEE,GAAG,CAACF;AAAZ,OAApB,CAAb;AACH,KAVoG,CAWrG;;;AACA,QAAIM,cAAc,GAAGd,IAAI,CAACE,oBAAL,GAA4Ba,mBAA5B,CAAgDd,OAAhD,CAArB;;AACA,QAAI,CAACa,cAAL,EAAqB;AACjB,aAAO,MAAMd,IAAI,CAACO,KAAL,CAAW,WAAX,EAAwB;AAAEC,QAAAA,IAAI,EAAE;AAAA;AAAA,sCAAWC;AAAnB,OAAxB,CAAb;AACH;;AACD,WAAO,MAAMT,IAAI,CAACY,IAAL,CAAU;AACnBE,MAAAA;AADmB,KAAV,CAAb;AAGH,G;;;;;;;;AAvBQE,MAAAA,U,iBAAAA,U","sourcesContent":["import { ErrorCodes } from \"../../shared/tsgf/Result\";\nimport { ReqTerminalDismissRoom, ResTerminalDismissRoom } from \"../../shared/tsgfServer/gameCluster/protocols/PtlTerminalDismissRoom\";\nimport { GameClusterApiCall } from \"../GameServerClusterMgr\";\n\nexport default async function (call: GameClusterApiCall<ReqTerminalDismissRoom, ResTerminalDismissRoom>) {\n    // 直接解散集群内的房间信息，再通知游戏服务器（游戏服务器还会再通知回来，返回了找不到的错误，游戏服务器可以忽略）\n    let regInfo = call.getGameClusterServer().roomMgr.dismissRoom(call.req.roomId);\n    if (!regInfo) {\n        return await call.error('roomId未找到', { code: ErrorCodes.RoomNotFound });\n    }\n    // 通知游戏服务器解散()\n    let ret = await call.getGameClusterServer().notifyGameServerDismissRoom(regInfo);\n    if (!ret.succ) {\n        return await call.error(ret.err, { code: ret.code });\n    }\n    // 生成房间在线信息\n    let roomOnlineInfo = call.getGameClusterServer().buildRoomOnlineInfo(regInfo);\n    if (!roomOnlineInfo) {\n        return await call.error('roomId未找到', { code: ErrorCodes.RoomNotFound });\n    }\n    return await call.succ({\n        roomOnlineInfo,\n    });\n}"]}