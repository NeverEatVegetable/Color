{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/demoServer/api/ApiPlayerAuth.ts"],"names":["getHallClient","hallClient","demoServer","hallServerUrl","ApiPlayerAuth","call","req1","appCryptoEncrypt","openId","req","showName","authTokenDay","ret1","client","callApi","isSucc","error","err","succ","res","HallClient","ApiCryptoHelper","getServerConfig"],"mappings":";;;;;AAQA,iBAAeA,aAAf,GAAoD;AAChD,QAAI,CAACC,UAAL,EAAiB;AACbA,MAAAA,UAAU,GAAG;AAAA;AAAA,oCAAe,CAAC,MAAM;AAAA;AAAA,+CAAP,EAA0BC,UAA1B,CAAqCC,aAApD,CAAb;AACH;;AACD,WAAOF,UAAP;AACH;;AAEM,iBAAeG,aAAf,CAA6BC,IAA7B,EAA0E;AAC7E,QAAIC,IAAI,GAAG;AAAA;AAAA,4CAAgBC,gBAAhB,CAAiC,SAAjC,EAA4C,6BAA5C,EAA2E;AAClFC,MAAAA,MAAM,EAAEH,IAAI,CAACI,GAAL,CAASD,MADiE;AAElFE,MAAAA,QAAQ,EAAEL,IAAI,CAACI,GAAL,CAASC,QAF+D;AAGlFC,MAAAA,YAAY,EAAE;AAHoE,KAA3E,CAAX;AAKA,UAAMC,IAAI,GAAG,MAAM,CAAC,MAAMZ,aAAa,EAApB,EAAwBa,MAAxB,CAA+BC,OAA/B,CAAuC,WAAvC,EAAoDR,IAApD,CAAnB;AACA,QAAI,CAACM,IAAI,CAACG,MAAV,EAAkB,OAAOV,IAAI,CAACW,KAAL,CAAWJ,IAAI,CAACK,GAAhB,CAAP;AAClB,WAAOZ,IAAI,CAACa,IAAL,CAAUN,IAAI,CAACO,GAAf,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;2BATqBf,a;;;;;;;;AAbbgB,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,e,iBAAAA,e","sourcesContent":["import { ApiCall, HttpClient } from \"tsrpc\";\nimport { ReqPlayerAuth, ResPlayerAuth } from \"../../shared/demoClient/protocols/PtlPlayerAuth\";\nimport { HallClient } from \"../../shared/hallClient/HallClient\";\nimport { ApiCryptoHelper } from \"../../shared/tsgfServer/apiCrypto/ApiCryptoHelper\";\nimport { getServerConfig } from \"../../serverConfigMgr\";\n\nlet hallClient!: HallClient;\n\nasync function getHallClient(): Promise<HallClient> {\n    if (!hallClient) {\n        hallClient = new HallClient((await getServerConfig()).demoServer.hallServerUrl);\n    }\n    return hallClient;\n}\n\nexport async function ApiPlayerAuth(call: ApiCall<ReqPlayerAuth, ResPlayerAuth>) {\n    let req1 = ApiCryptoHelper.appCryptoEncrypt(\"default\", \"FDGWPRET345-809RGKFER43SKGF\", {\n        openId: call.req.openId,\n        showName: call.req.showName,\n        authTokenDay: 1,\n    });\n    const ret1 = await (await getHallClient()).client.callApi(\"Authorize\", req1);\n    if (!ret1.isSucc) return call.error(ret1.err);\n    return call.succ(ret1.res);\n}"]}