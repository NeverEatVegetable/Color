{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/shared/tsgfServer/BaseDAL.ts"],"names":["OrderBy","BaseDAL","BaseMySqlDAL","checkIdentifierConform","name","checkIdentifier","test","constructor","tableName","colName","isAsc","Error","toString","reverseAsc","str","asc","currDbHelper","_currDbHelper","dbHelperFactory","idName","getDbHelper","closeCurrDb","close","undefined","selectAll","selectSql","fromSqlApp","whereSql","params","orderby","limitCount","fromSql","orderBySql","length","join","sql","buildSelectSql","queryMulti","selectPages","pageSize","pageIndex","selectSingle","querySingle","limitOffset"],"mappings":"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","sourcesContent":["import { IResult } from \"../tsgf/Result\";\nimport { IDbHelper } from \"./DbHelper\";\n\nexport class OrderBy {\n    public tableName: string;\n    public colName: string;\n    public isAsc: boolean;\n    constructor(tableName: string, colName: string, isAsc: boolean) {\n        if (!checkIdentifierConform(tableName)) throw Error(`${tableName}表名不合法！`);\n        if (!checkIdentifierConform(colName)) throw Error(`${colName}字段名不合法！`);\n        this.tableName = tableName;\n        this.colName = colName;\n        this.isAsc = isAsc;\n    }\n\n    public toString(reverseAsc: boolean = false) {\n        let str = '';\n        if (this.tableName) str += this.tableName + '.';\n        str += this.colName;\n        let asc = reverseAsc ? !this.isAsc : this.isAsc;\n        str += asc ? ' asc' : ' desc';\n        return '';\n    }\n}\n\nexport abstract class BaseDAL<Model>{\n\n    protected _currDbHelper?: IDbHelper;\n    protected readonly dbHelperFactory: () => IDbHelper;\n\n    public readonly tableName: string;\n    public readonly idName: string;\n    public get currDbHelper() {\n        return this._currDbHelper;\n    }\n\n    constructor(dbHelperFactory: () => IDbHelper, tableName: string, idName: string) {\n        this.dbHelperFactory = dbHelperFactory;\n        this.tableName = tableName;\n        this.idName = idName;\n    }\n\n    protected getDbHelper(): IDbHelper {\n        if (!this._currDbHelper) {\n            this._currDbHelper = this.dbHelperFactory();\n        }\n        return this._currDbHelper;\n    }\n    public async closeCurrDb(): Promise<void> {\n        if (this._currDbHelper) {\n            await this._currDbHelper.close();\n            this._currDbHelper = undefined;\n        }\n    }\n\n    /**\n     * 基础生成select语句\n     *\n     * @protected\n     * @param selectSql 不包含select关键字\n     * @param fromSql 不包含from关键字\n     * @param whereSql 可空，有则不包含where关键字\n     * @param limitCount 读取条数\n     * @param limitOffset 读取偏移（从0开始）\n     * @param orderBySql 可空，有则不包含order by关键字\n     */\n    protected abstract buildSelectSql(selectSql: string, fromSql: string, whereSql?: string | null, orderBySql?: string | null, limitCount?: number | null, limitOffset?: number | null): string;\n\n    /**\n     * 查询多行\n     *\n     * @public\n     * @param selectSql=\"*\"\n     * @param fromSqlApp\n     * @param whereSql\n     * @param params\n     * @param orderby\n     * @param limitCount\n     */\n    public async selectAll(selectSql: string = \"*\", fromSqlApp?: string | null, whereSql?: string | null, params?: any | null, orderby?: OrderBy[] | null, limitCount?: number | null) {\n        let fromSql = this.tableName;\n        if (fromSqlApp) fromSql += ` ${fromSqlApp}`;\n        let orderBySql: string | null = null;\n        if (orderby && orderby.length > 0) orderBySql = orderby.join(',')\n        let sql = this.buildSelectSql(selectSql, fromSql, whereSql, orderBySql, limitCount);\n        return await this.getDbHelper().queryMulti<Model>(sql, params);\n    }\n\n    /**\n     * 分页查询\n     *\n     * @public\n     * @param pageSize 一页几条\n     * @param pageIndex 页码，从1开始\n     * @param selectSql=\"*\"\n     * @param fromSqlApp\n     * @param whereSql\n     * @param params\n     * @param orderby\n     */\n    public async selectPages(pageSize: number, pageIndex: number, selectSql: string = \"*\", fromSqlApp?: string | null, whereSql?: string | null, params?: any | null, orderby?: OrderBy[] | null) {\n        let fromSql = this.tableName;\n        if (fromSqlApp) fromSql += ` ${fromSqlApp}`;\n        let orderBySql: string | null = null;\n        if (orderby && orderby.length > 0) orderBySql = orderby.join(',')\n        let sql = this.buildSelectSql(selectSql, fromSql, whereSql, orderBySql, pageSize, (pageIndex - 1) * pageSize);\n        return await this.getDbHelper().queryMulti<Model>(sql, params);\n    }\n\n    /**\n     * 查询单条\n     *\n     * @public\n     * @param fromSqlApp\n     * @param whereSql\n     * @param params\n     */\n    public async selectSingle(fromSqlApp?: string | null, whereSql?: string | null, params?: any | null) {\n        let fromSql = this.tableName;\n        if (fromSqlApp) fromSql += ` ${fromSqlApp}`;\n        let sql = this.buildSelectSql('*', fromSql, whereSql, undefined, 1);\n        return await this.getDbHelper().querySingle<Model>(sql, params);\n    }\n}\nexport class BaseMySqlDAL<Model> extends BaseDAL<Model>{\n    /**\n     * 基础生成select语句\n     *\n     * @protected\n     * @param selectSql 不包含select关键字\n     * @param fromSql 不包含from关键字\n     * @param whereSql 可空，有则不包含where关键字\n     * @param limitCount 读取条数\n     * @param limitOffset 读取偏移（从0开始）\n     * @param orderBySql 可空，有则不包含order by关键字\n     */\n    protected buildSelectSql(selectSql: string, fromSql: string, whereSql?: string | null, orderBySql?: string | null, limitCount?: number | null, limitOffset?: number | null): string {\n        let sql = `select ${selectSql} from ${fromSql}`;\n        if (whereSql) sql += ` where ${whereSql}`;\n        if (orderBySql) sql += ` order by ${orderBySql}`;\n        if (typeof (limitCount) !== \"undefined\" && limitCount !== null) {\n            if (typeof (limitOffset) !== \"undefined\" && limitOffset !== null) {\n                sql += ` limit ${limitOffset},${limitCount}`;\n            } else {\n                sql += ` limit ${limitCount}`;\n            }\n        }\n        return sql;\n    }\n}\n\n\nconst checkIdentifier = /^[0-9a-zA-Z\\_]+$/ig;\n/**\n * 检查一个名称是否符合标识符命名规范，防止注入等\n * @date 2022/4/25 - 15:15:56\n *\n * @param name\n */\nexport function checkIdentifierConform(name: string): boolean {\n    return checkIdentifier.test(name);\n}\n"]}