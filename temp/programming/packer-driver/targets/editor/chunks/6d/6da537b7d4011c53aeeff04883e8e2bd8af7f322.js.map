{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/Scripts/Player/PlayerController.ts"],"names":["_decorator","Component","Vec3","input","Input","ccclass","property","Speed","PlayerController","_startJump","_jumpStep","_curJumpTime","_jumpTime","_curJumpSpeed","_curPos","_deltaPos","_targetPos","start","on","EventType","MOUSE_UP","onMouseUp","reset","event","getButton","jumpByStep","step","node","getPosition","add","update","deltaTime","setPosition","x"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAkBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;;;;;;;;;OACnD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;uBAEjBO,K,GAAQ,E;;kCAGRC,gB,WADZH,OAAO,CAAC,kBAAD,C,gBAAR,MACaG,gBADb,SACsCP,SADtC,CACgD;AAAA;AAAA;AAAA,eAEpCQ,UAFoC,GAEd,KAFc;AAAA,eAGpCC,SAHoC,GAGhB,CAHgB;AAAA,eAIpCC,YAJoC,GAIb,CAJa;AAAA,eAKpCC,SALoC,GAKhB,GALgB;AAAA,eAMpCC,aANoC,GAMZ,CANY;AAAA,eAOpCC,OAPoC,GAOpB,IAAIZ,IAAJ,EAPoB;AAAA,eAQpCa,SARoC,GAQlB,IAAIb,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CARkB;AAAA,eASpCc,UAToC,GASjB,IAAId,IAAJ,EATiB;AAAA;;AAW5Ce,QAAAA,KAAK,GAAI;AACLd,UAAAA,KAAK,CAACe,EAAN,CAASd,KAAK,CAACe,SAAN,CAAgBC,QAAzB,EAAmC,KAAKC,SAAxC,EAAmD,IAAnD;AACH;;AAEDC,QAAAA,KAAK,GAAG,CACP;;AAEDD,QAAAA,SAAS,CAACE,KAAD,EAAoB;AACzB,cAAIA,KAAK,CAACC,SAAN,OAAsB,CAA1B,EAA6B;AACzB,iBAAKC,UAAL,CAAgB,CAAhB;AACH,WAFD,MAEO,IAAIF,KAAK,CAACC,SAAN,OAAsB,CAA1B,EAA6B;AAChC,iBAAKC,UAAL,CAAgB,CAAhB;AACH;AAEJ;;AAEDA,QAAAA,UAAU,CAACC,IAAD,EAAe;AACrB,cAAI,KAAKjB,UAAT,EAAqB;AACjB;AACH;;AACD,eAAKA,UAAL,GAAkB,IAAlB;AACA,eAAKC,SAAL,GAAiBgB,IAAjB;AACA,eAAKf,YAAL,GAAoB,CAApB;AACA,eAAKE,aAAL,GAAqB,KAAKH,SAAL,GAAiBH,KAAjB,GAAwB,KAAKK,SAAlD;AACA,eAAKe,IAAL,CAAUC,WAAV,CAAsB,KAAKd,OAA3B;AACAZ,UAAAA,IAAI,CAAC2B,GAAL,CAAS,KAAKb,UAAd,EAA0B,KAAKF,OAA/B,EAAwC,IAAIZ,IAAJ,CAAS,KAAKQ,SAAL,GAAgBH,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC,CAAxC;AACH;;AAEDuB,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AACvB,cAAI,KAAKtB,UAAT,EAAqB;AACjB,iBAAKE,YAAL,IAAqBoB,SAArB;;AACA,gBAAI,KAAKpB,YAAL,GAAoB,KAAKC,SAA7B,EAAwC;AACpC;AACA,mBAAKe,IAAL,CAAUK,WAAV,CAAsB,KAAKhB,UAA3B;AACA,mBAAKP,UAAL,GAAkB,KAAlB;AACH,aAJD,MAIO;AACH;AACA,mBAAKkB,IAAL,CAAUC,WAAV,CAAsB,KAAKd,OAA3B;AACA,mBAAKC,SAAL,CAAekB,CAAf,GAAmB,KAAKpB,aAAL,GAAqBkB,SAAxC;AACA7B,cAAAA,IAAI,CAAC2B,GAAL,CAAS,KAAKf,OAAd,EAAuB,KAAKA,OAA5B,EAAqC,KAAKC,SAA1C;AACA,mBAAKY,IAAL,CAAUK,WAAV,CAAsB,KAAKlB,OAA3B;AACH;AACJ;AACJ;;AAtD2C,O","sourcesContent":["import { _decorator, Component, Vec3, EventMouse, input, Input } from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport const Speed = 40;\r\n\r\n@ccclass(\"PlayerController\")\r\nexport class PlayerController extends Component {\r\n\r\n    private _startJump: boolean = false;\r\n    private _jumpStep: number = 0;\r\n    private _curJumpTime: number = 0;\r\n    private _jumpTime: number = 0.1;\r\n    private _curJumpSpeed: number = 0;\r\n    private _curPos: Vec3 = new Vec3();\r\n    private _deltaPos: Vec3 = new Vec3(0, 0, 0);\r\n    private _targetPos: Vec3 = new Vec3();\r\n\r\n    start () {\r\n        input.on(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n    }\r\n\r\n    reset() {\r\n    }   \r\n\r\n    onMouseUp(event: EventMouse) {\r\n        if (event.getButton() === 0) {\r\n            this.jumpByStep(1);\r\n        } else if (event.getButton() === 2) {\r\n            this.jumpByStep(2);\r\n        }\r\n\r\n    }\r\n\r\n    jumpByStep(step: number) {\r\n        if (this._startJump) {\r\n            return;\r\n        }\r\n        this._startJump = true;\r\n        this._jumpStep = step;\r\n        this._curJumpTime = 0;\r\n        this._curJumpSpeed = this._jumpStep * Speed/ this._jumpTime;\r\n        this.node.getPosition(this._curPos);\r\n        Vec3.add(this._targetPos, this._curPos, new Vec3(this._jumpStep* Speed, 0, 0));    \r\n    }\r\n   \r\n    update (deltaTime: number) {\r\n        if (this._startJump) {\r\n            this._curJumpTime += deltaTime;\r\n            if (this._curJumpTime > this._jumpTime) {\r\n                // end\r\n                this.node.setPosition(this._targetPos);\r\n                this._startJump = false;              \r\n            } else {\r\n                // tween\r\n                this.node.getPosition(this._curPos);\r\n                this._deltaPos.x = this._curJumpSpeed * deltaTime;\r\n                Vec3.add(this._curPos, this._curPos, this._deltaPos);\r\n                this.node.setPosition(this._curPos);\r\n            }\r\n        }\r\n    }\r\n}"]}