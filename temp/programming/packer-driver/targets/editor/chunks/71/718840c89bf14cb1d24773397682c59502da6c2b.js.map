{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/shared/tsgf/Provider.ts"],"names":["getGlobalSDKProvider","globalThis","tsgfSDKProvider","initSDKProvider","provider"],"mappings":";;;;;AAoCA;AACO,WAASA,oBAAT,GAAyD;AAC5D,WAAOC,UAAU,CAACC,eAAlB;AACH;;AAOD;AACA;AACA;AACA;AACO,WAASC,eAAT,CAAyBC,QAAzB,EAAiD;AACpDH,IAAAA,UAAU,CAACC,eAAX,GAA6BE,QAA7B;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAfeJ,oB;qBAaAG;;;;;;;;;;;;;AA9ChB;AACA;AACA;;AAsBA;AACA;AACA","sourcesContent":["\nimport { BaseHttpClient, BaseHttpClientOptions, BaseWsClient, BaseWsClientOptions } from \"tsrpc-base-client\";\nimport { BaseServiceType, ServiceProto } from \"tsrpc-proto\";\n\n/**\n * 环境相关接口\n */\nexport interface IEnvProvider {\n    /**\n     * 当前平台实现的Http客户端封装\n     * @param proto \n     * @param options \n     * @returns http client \n     */\n    getHttpClient:\n    <ServiceType extends BaseServiceType>(proto: ServiceProto<ServiceType>, options?: Partial<BaseHttpClientOptions>)\n        => BaseHttpClient<ServiceType>;\n    /**\n     * 当前平台实现的websocket客户端封装\n     * @param proto \n     * @param options \n     * @returns websocket client \n     */\n    getWsClient:\n    <ServiceType extends BaseServiceType>(proto: ServiceProto<ServiceType>, options?: Partial<BaseWsClientOptions>)\n        => BaseWsClient<ServiceType>;\n}\n\n/**\n * 全局供应商接口定义\n */\nexport interface ISDKProvider {\n    /**环境实现供应商*/\n    env: IEnvProvider | null;\n}\n\n/**获取全局供应商实现*/\nexport function getGlobalSDKProvider(): ISDKProvider | undefined{\n    return globalThis.tsgfSDKProvider;\n}\n\ndeclare module globalThis {\n    /**全局供应商实现*/\n    let tsgfSDKProvider: ISDKProvider;\n}\n\n/**\n * 初始化全局供应商实现\n * @param provider \n */\nexport function initSDKProvider(provider: ISDKProvider) {\n    globalThis.tsgfSDKProvider = provider;\n}"]}