{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/tsgf-sdk/src/Room.ts"],"names":["RoomEvents","Room","GameClient","EventEmitter","ErrorCodes","Result","delayCanCancel","constructor","_eventEmitter","dispose","removeAllListeners","undefined","__emitDisconnected","reason","emit","arguments","onDisconnected","fn","on","offDisconnected","off","__emitReconnectStart","currTryCount","onReconnectStart","offReconnectStart","__emitReconnectResult","succ","err","onReconnectResult","offReconnectResult","__emitLeaveRoom","roomInfo","onLeaveRoom","offLeaveRoom","__emitJoinRoom","onJoinRoom","offJoinRoom","__emitRecvRoomMsg","roomMsg","onRecvRoomMsg","offRecvRoomMsg","__emitPlayerJoinRoom","player","onPlayerJoinRoom","offPlayerJoinRoom","__emitPlayerLeaveRoom","onPlayerLeaveRoom","offPlayerLeaveRoom","__emitDismissRoom","onDismissRoom","offDismissRoom","__emitStartFrameSync","startPlayer","onStartFrameSync","offStartFrameSync","__emitStopFrameSync","stopPlayer","onStopFrameSync","offStopFrameSync","__emitRecvFrame","syncFrame","dt","onRecvFrame","offRecvFrame","__emitRequirePlayerSyncState","onRequirePlayerSyncState","offRequirePlayerSyncState","__emitChangePlayerNetworkState","onChangePlayerNetworkState","offChangePlayerNetworkState","__emitChangeCustomPlayerProfile","changeInfo","onChangeCustomPlayerProfile","offChangeCustomPlayerProfile","__emitChangeCustomPlayerStatus","onChangeCustomPlayerStatus","offChangeCustomPlayerStatus","__emitChangeRoom","onChangeRoom","offChangeRoom","__emitChangePlayerTeam","onChangePlayerTeam","offChangePlayerTeam","__emitRoomAllPlayersMatchStart","matchReqId","reqPlayerId","matchParams","onRoomAllPlayersMatchStart","offRoomAllPlayersMatchStart","__emitRoomAllPlayersMatchResult","errMsg","errCode","matchResult","onRoomAllPlayersMatchResult","offRoomAllPlayersMatchResult","game","_game","__gameClient","_enabledReconnect","_reconnectWaitSec","_roomWaitReconnectTime","events","disconnect","enabledReconnect","v","reconnectWaitSec","roomWaitReconnectTime","currRoomInfo","myPlayerInfo","currPlayerInfo","_setGameClientHandler","r","r2","msg","r3","_disposeGameClient","__createGameClient","gameServerUrl","playerPara","__myPlayerToken","authRet","authorize","transition","buildSucc","recoverPlayerRoom","updateShowName","ret","__hallClient","__myPlayerId","roomOnlineInfo","data","buildErr","RoomNotIn","reconnectRet","reconnect","getOnlineRoomInfo","roomId","getRoomOnlineInfo","filterRooms","filter","skip","limit","createRoom","roomPara","teamId","createRet","joinRet","joinRoom","__joinGameServerRoom","joinRoomPara","para","joinRoomByServer","joinOrCreateRoom","matchOrCreateRoomPara","getOrCreateRet","getOrCreateRoom","createRoomOnlineInfo","matchRoomOnlineInfoList","length","room","createRoomPara","Exception","leaveRoom","dismissRoom","changeRoom","changePara","changeCustomPlayerProfile","customPlayerProfile","robotPlayerId","changeCustomPlayerStatus","customPlayerStatus","changePlayerTeam","newTeamId","sendRoomMsg","startFrameSync","stopFrameSync","sendFrame","inpOperates","playerInpFrame","requestAfterFrames","requestFrames","beginFrameIndex","endFrameIndex","playerSendSyncState","stateData","stateFrameIndex","requestMatchFromPlayers","matchParamsFromPlayer","matchResultCallback","requestPlayersMatch","waitResult","waitCancel","task","Promise","res","requestMatch","_startWaitMatchResultFromPlayers","then","cancel","timeoutTS","Date","now","matchTimeoutSec","isCancel","currDelayCancel","queryMatch","MatchRequestCancelled","MatchQueryTimeout","cancelMatchFromPlayers","cancelMatch","createRoomRobot","createPa","roomRobotLeave","ins"],"mappings":"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","sourcesContent":["import { Game } from \"./Game\";\nimport { GameClient } from \"./gameClient/GameClient\";\nimport { EventEmitter } from \"./tsgf/EventEmitter\";\nimport { ICancelableExec } from \"./tsgf/ICancelable\";\nimport { IMatchFromPlayer, IMatchParamsBase, IMatchParamsFromPlayer, IMatchParamsFromRoomAllPlayer, IMatchPlayerResultWithServer, IMatchResult } from \"./tsgf/match/Models\";\nimport { IChangeCustomPlayerProfile, IChangeCustomPlayerStatus, IChangePlayerTeam, IPlayerInfo, IPlayerInfoPara } from \"./tsgf/player/IPlayerInfo\";\nimport { ErrorCodes, IResult, Result } from \"./tsgf/Result\";\nimport { IAfterFrames, IGameSyncFrame, IPlayerInputOperate } from \"./tsgf/room/IGameFrame\";\nimport { IChangeRoomPara, ICreateRoomPara, IGetOrCreateRoomPara, IJoinRoomPara, IRoomInfo, IRoomOnlineInfo, IRoomsFilterPara, IRoomsFilterRes } from \"./tsgf/room/IRoomInfo\";\nimport { IRecvRoomMsg, IRoomMsg } from \"./tsgf/room/IRoomMsg\";\nimport { delayCanCancel } from \"./tsgf/Utils\";\n\nexport class RoomEvents {\n    private _eventEmitter: EventEmitter;\n\n    constructor() {\n        this._eventEmitter = new EventEmitter();\n    }\n\n    public async dispose(): Promise<void> {\n        this._eventEmitter.removeAllListeners();\n        //@ts-ignore\n        this._eventEmitter = undefined;\n    }\n\n    /**\n     * @internal\n     */\n    __emitDisconnected(reason?: string): void { this._eventEmitter.emit('Disconnect', ...arguments); }\n    /**\n     * 彻底断开触发, 如下情况:\n     * 1. 断开连接时没启用断线重连则触发\n     * 2. 主动断开时触发, reason='ManualDisconnect'\n     * 3. 断线重连失败并不再重连时触发, reason='ReconnectFailed'\n     * 4. 认证失败时会断开连接, 同时触发, reason='AuthorizeFailed'\n     * @param fn reason:断开原因\n     */\n    public onDisconnected(fn: (reason?: string) => void): void { this._eventEmitter.on('Disconnected', fn); }\n    public offDisconnected(fn: (reason?: string) => void): void { this._eventEmitter.off('Disconnected', fn); }\n\n    /**\n     * @internal\n     */\n    __emitReconnectStart(currTryCount: number): void { this._eventEmitter.emit('ReconnectStart', ...arguments); }\n    /**\n     * [需启用断线重连:enabledReconnect]每次开始断线重连时触发, [reconnectWaitSec]秒后开始重连\n     * @param fn currTryCount: 已经重试了几次了, 首次断线重连则为0\n     * */\n    public onReconnectStart(fn: (currTryCount: number) => void): void { this._eventEmitter.on('ReconnectStart', fn); }\n    public offReconnectStart(fn: (currTryCount: number) => void): void { this._eventEmitter.off('ReconnectStart', fn); }\n\n    /**\n     * @internal\n     */\n    __emitReconnectResult(succ: boolean, err: string | null): void { this._eventEmitter.emit('ReconnectResult', ...arguments); }\n    /**断线重连最终有结果时触发(终于连上了,或者返回不继续尝试了)*/\n    public onReconnectResult(fn: (succ: boolean, err: string | null) => void): void { this._eventEmitter.on('ReconnectResult', fn); }\n    public offReconnectResult(fn: (succ: boolean, err: string | null) => void): void { this._eventEmitter.off('ReconnectResult', fn); }\n\n    /**\n     * @internal\n     */\n    __emitLeaveRoom(roomInfo: IRoomInfo): void { this._eventEmitter.emit('LeaveRoom', ...arguments); }\n    /**当前玩家不管什么原因离开了房间(主动离开,主动解散,房间被解散等等),都会触发*/\n    public onLeaveRoom(fn: (roomInfo: IRoomInfo) => void): void { this._eventEmitter.on('LeaveRoom', fn); }\n    public offLeaveRoom(fn: (roomInfo: IRoomInfo) => void): void { this._eventEmitter.off('LeaveRoom', fn); }\n\n    /**\n     * @internal\n     */\n    __emitJoinRoom(roomInfo: IRoomInfo): void { this._eventEmitter.emit('JoinRoom', ...arguments); }\n    /**当前玩家加入到房间后触发*/\n    public onJoinRoom(fn: (roomInfo: IRoomInfo) => void): void { this._eventEmitter.on('JoinRoom', fn); }\n    public offJoinRoom(fn: (roomInfo: IRoomInfo) => void): void { this._eventEmitter.off('JoinRoom', fn); }\n\n\n    /**\n     * @internal\n     */\n    __emitRecvRoomMsg(roomMsg: IRecvRoomMsg): void { this._eventEmitter.emit('RecvRoomMsg', ...arguments); }\n    /**【在房间中才能收到】当接收到房间消息时触发*/\n    public onRecvRoomMsg(fn: (roomMsg: IRecvRoomMsg) => void): void { this._eventEmitter.on('RecvRoomMsg', fn); }\n    public offRecvRoomMsg(fn: (roomMsg: IRecvRoomMsg) => void): void { this._eventEmitter.off('RecvRoomMsg', fn); }\n\n    /**\n     * @internal\n     */\n    __emitPlayerJoinRoom(player: IPlayerInfo, roomInfo: IRoomInfo): void { this._eventEmitter.emit('PlayerJoinRoom', ...arguments); }\n    /**【在房间中才能收到】玩家加入当前房间（自己操作的不触发）*/\n    public onPlayerJoinRoom(fn: (player: IPlayerInfo, roomInfo: IRoomInfo) => void): void { this._eventEmitter.on('PlayerJoinRoom', fn); }\n    public offPlayerJoinRoom(fn: (player: IPlayerInfo, roomInfo: IRoomInfo) => void): void { this._eventEmitter.off('PlayerJoinRoom', fn); }\n\n    /**\n     * @internal\n     */\n    __emitPlayerLeaveRoom(player: IPlayerInfo, roomInfo: IRoomInfo): void { this._eventEmitter.emit('PlayerLeaveRoom', ...arguments); }\n    /**【在房间中才能收到】玩家退出当前房间（自己操作的不触发）*/\n    public onPlayerLeaveRoom(fn: (player: IPlayerInfo, roomInfo: IRoomInfo) => void): void { this._eventEmitter.on('PlayerLeaveRoom', fn); }\n    public offPlayerLeaveRoom(fn: (player: IPlayerInfo, roomInfo: IRoomInfo) => void): void { this._eventEmitter.off('PlayerLeaveRoom', fn); }\n\n    /**\n     * @internal\n     */\n    __emitDismissRoom(roomInfo: IRoomInfo): void { this._eventEmitter.emit('DismissRoom', ...arguments); }\n    /**【在房间中才能收到】当前房间被解散（自己操作的不触发）*/\n    public onDismissRoom(fn: (roomInfo: IRoomInfo) => void): void { this._eventEmitter.on('DismissRoom', fn); }\n    public offDismissRoom(fn: (roomInfo: IRoomInfo) => void): void { this._eventEmitter.off('DismissRoom', fn); }\n\n    /**\n     * @internal\n     */\n    __emitStartFrameSync(roomInfo: IRoomInfo, startPlayer: IPlayerInfo): void { this._eventEmitter.emit('StartFrameSync', ...arguments); }\n    /**【在房间中才能收到】房间中开始帧同步了*/\n    public onStartFrameSync(fn: (roomInfo: IRoomInfo, startPlayer: IPlayerInfo) => void): void { this._eventEmitter.on('StartFrameSync', fn); }\n    public offStartFrameSync(fn: (roomInfo: IRoomInfo, startPlayer: IPlayerInfo) => void): void { this._eventEmitter.off('StartFrameSync', fn); }\n\n    /**\n     * @internal\n     */\n    __emitStopFrameSync(roomInfo: IRoomInfo, stopPlayer: IPlayerInfo): void { this._eventEmitter.emit('StopFrameSync', ...arguments); }\n    /**【在房间中才能收到】房间中停止帧同步了*/\n    public onStopFrameSync(fn: (roomInfo: IRoomInfo, stopPlayer: IPlayerInfo) => void): void { this._eventEmitter.on('StopFrameSync', fn); }\n    public offStopFrameSync(fn: (roomInfo: IRoomInfo, stopPlayer: IPlayerInfo) => void): void { this._eventEmitter.off('StopFrameSync', fn); }\n\n    /**\n     * @internal\n     */\n    __emitRecvFrame(syncFrame: IGameSyncFrame, dt: number): void { this._eventEmitter.emit('RecvFrame', ...arguments); }\n    /**【在房间中才能收到】房间中收到一个同步帧*/\n    public onRecvFrame(fn: (syncFrame: IGameSyncFrame, dt: number) => void): void { this._eventEmitter.on('RecvFrame', fn); }\n    public offRecvFrame(fn: (syncFrame: IGameSyncFrame, dt: number) => void): void { this._eventEmitter.off('RecvFrame', fn); }\n\n    /**\n     * @internal\n     */\n    __emitRequirePlayerSyncState(): void { this._eventEmitter.emit('RequirePlayerSyncState', ...arguments); }\n    /**【在房间中才能收到】服务端要求玩家上传状态同步数据 (调用 playerSendSyncState 方法)*/\n    public onRequirePlayerSyncState(fn: () => void): void { this._eventEmitter.on('RequirePlayerSyncState', fn); }\n    public offRequirePlayerSyncState(fn: () => void): void { this._eventEmitter.off('RequirePlayerSyncState', fn); }\n\n    /**\n     * @internal\n     */\n    __emitChangePlayerNetworkState(player: IPlayerInfo): void { this._eventEmitter.emit('RequirePlayerSyncState', ...arguments); }\n    /**【在房间中才能收到】其他玩家的网络状态变更(离线/上线)*/\n    public onChangePlayerNetworkState(fn: (player: IPlayerInfo) => void): void { this._eventEmitter.on('RequirePlayerSyncState', fn); }\n    public offChangePlayerNetworkState(fn: (player: IPlayerInfo) => void): void { this._eventEmitter.off('RequirePlayerSyncState', fn); }\n\n    /**\n     * @internal\n     */\n    __emitChangeCustomPlayerProfile(changeInfo: IChangeCustomPlayerProfile): void { this._eventEmitter.emit('ChangeCustomPlayerProfile', ...arguments); }\n    /**【在房间中才能收到】有玩家修改了自定义属性(只要在房间,自己也会收到)*/\n    public onChangeCustomPlayerProfile(fn: (changeInfo: IChangeCustomPlayerProfile) => void): void { this._eventEmitter.on('ChangeCustomPlayerProfile', fn); }\n    public offChangeCustomPlayerProfile(fn: (changeInfo: IChangeCustomPlayerProfile) => void): void { this._eventEmitter.off('ChangeCustomPlayerProfile', fn); }\n\n    /**\n     * @internal\n     */\n    __emitChangeCustomPlayerStatus(changeInfo: IChangeCustomPlayerStatus): void { this._eventEmitter.emit('ChangeCustomPlayerStatus', ...arguments); }\n    /**【在房间中才能收到】有玩家修改了自定义状态(只要在房间,自己也会收到)*/\n    public onChangeCustomPlayerStatus(fn: (changeInfo: IChangeCustomPlayerStatus) => void): void { this._eventEmitter.on('ChangeCustomPlayerStatus', fn); }\n    public offChangeCustomPlayerStatus(fn: (changeInfo: IChangeCustomPlayerStatus) => void): void { this._eventEmitter.off('ChangeCustomPlayerStatus', fn); }\n\n    /**\n     * @internal\n     */\n    __emitChangeRoom(roomInfo: IRoomInfo): void { this._eventEmitter.emit('ChangeRoom', ...arguments); }\n    /**【在房间中才能收到】房间信息有修改*/\n    public onChangeRoom(fn: (roomInfo: IRoomInfo) => void): void { this._eventEmitter.on('ChangeRoom', fn); }\n    public offChangeRoom(fn: (roomInfo: IRoomInfo) => void): void { this._eventEmitter.off('ChangeRoom', fn); }\n\n    /**\n     * @internal\n     */\n    __emitChangePlayerTeam(changeInfo: IChangePlayerTeam): void { this._eventEmitter.emit('ChangePlayerTeam', ...arguments); }\n    /**【在房间中才能收到】有玩家修改了所在队伍(只要在房间,自己也会收到)*/\n    public onChangePlayerTeam(fn: (changeInfo: IChangePlayerTeam) => void): void { this._eventEmitter.on('ChangePlayerTeam', fn); }\n    public offChangePlayerTeam(fn: (changeInfo: IChangePlayerTeam) => void): void { this._eventEmitter.off('ChangePlayerTeam', fn); }\n\n    /**\n     * @internal\n     */\n    __emitRoomAllPlayersMatchStart(matchReqId: string, reqPlayerId: string, matchParams: IMatchParamsFromRoomAllPlayer): void { this._eventEmitter.emit('RoomAllPlayersMatchStart', ...arguments); }\n    /**\n     * 【在房间中才能收到】有玩家发起了全房间玩家匹配(自己也会收到)\n     * @internal\n     */\n    public onRoomAllPlayersMatchStart(fn: (matchReqId: string, reqPlayerId: string, matchParams: IMatchParamsFromRoomAllPlayer) => void): void { this._eventEmitter.on('RoomAllPlayersMatchStart', fn); }\n    /**\n     * @internal\n     */\n    public offRoomAllPlayersMatchStart(fn: (matchReqId: string, reqPlayerId: string, matchParams: IMatchParamsFromRoomAllPlayer) => void): void { this._eventEmitter.on('RoomAllPlayersMatchStart', fn); }\n\n    /**\n     * @internal\n     */\n    __emitRoomAllPlayersMatchResult(errMsg?: string, errCode?: ErrorCodes, matchResult?: IMatchPlayerResultWithServer): void { this._eventEmitter.emit('RoomAllPlayersMatchResult', ...arguments); }\n    /**【在房间中才能收到】全房间玩家匹配有结果了(自己也会收到)\n     * @internal\n     */\n    public onRoomAllPlayersMatchResult(fn: (errMsg?: string, errCode?: ErrorCodes, matchResult?: IMatchPlayerResultWithServer) => void): void { this._eventEmitter.on('RoomAllPlayersMatchResult', fn); }\n    /**\n     * @internal\n     */\n    public offRoomAllPlayersMatchResult(fn: (errMsg?: string, errCode?: ErrorCodes, matchResult?: IMatchPlayerResultWithServer) => void): void { this._eventEmitter.on('RoomAllPlayersMatchResult', fn); }\n\n}\n\n/**\n * 房间功能模块\n * \n * [同时只能在一个房间中] \n * \n * 如果用了 GroupRoom , 则在相关事件中需要使用 if(GroupRoom.ins.currGroupRoom) 来判断当前是在组队房间中\n *\n */\nexport class Room {\n\n    /**单例*/\n    public static ins: Room;\n\n    private _game: Game;\n    /**\n     * @internal\n     */\n    __gameClient?: GameClient;\n\n    constructor(game: Game) {\n        this._game = game;\n    }\n\n    public async dispose(): Promise<void> {\n        await this.__gameClient?.disconnect();\n        this.__gameClient = undefined;\n        await this.events.dispose();\n        //@ts-ignore\n        this._game = undefined;\n    }\n\n\n    private _enabledReconnect: boolean = true;\n    /**\n     * 是否启用断线重连,启用则在断开后,reconnectWaitSec秒后重连\n     */\n    public get enabledReconnect(): boolean {\n        return this._enabledReconnect;\n    }\n    public set enabledReconnect(v: boolean) {\n        this._enabledReconnect = v;\n        if (this.__gameClient) this.__gameClient.enabledReconnect = v;\n    }\n\n    private _reconnectWaitSec: number = 2;\n    /**\n     * 断线重连等待秒数\n     */\n    public get reconnectWaitSec(): number {\n        return this._reconnectWaitSec;\n    }\n    public set reconnectWaitSec(v: number) {\n        this._reconnectWaitSec = v;\n        if (this.__gameClient) this.__gameClient.reconnectWaitSec = v;\n    }\n\n    protected _roomWaitReconnectTime?: number;\n    /**可设置房间中断线后等待重连的毫秒数(认证和重连时使用),默认为60000ms(60秒),设成0表示断线后直接清理(按退出房间处理)不等待重连*/\n    public get roomWaitReconnectTime(): number | undefined {\n        return this._roomWaitReconnectTime;\n    }\n    public set roomWaitReconnectTime(v: number | undefined) {\n        this._roomWaitReconnectTime = v;\n        if (this.__gameClient) this.__gameClient.roomWaitReconnectTime = v;\n    }\n\n    /**\n     * 房间的所有事件\n     */\n    public readonly events = new RoomEvents();\n\n    /**\n     * 获取当前所在房间信息\n    */\n    public get currRoomInfo(): IRoomInfo | null {\n        return this.__gameClient?.currRoomInfo ?? null;\n    }\n    /**\n     * 在房间中才有的当前玩家信息对象, 请不要保存本属性, 因为每次数据有更新都会改变引用, 请每次都读取本属性\n    */\n    public get myPlayerInfo(): IPlayerInfo | null {\n        return this.__gameClient?.currPlayerInfo ?? null;\n    }\n\n    /**将事件注册到gameClient中*/\n    private _setGameClientHandler() {\n        if (this.__gameClient) {\n            this.__gameClient.enabledReconnect = this._enabledReconnect;\n            this.__gameClient.reconnectWaitSec = this._reconnectWaitSec;\n\n            this.__gameClient.onJoinRoom = (r) => this.events.__emitJoinRoom(r);\n            this.__gameClient.onLeaveRoom = (r) => this.events.__emitLeaveRoom(r);\n            this.__gameClient.onDisconnected = (r) => this.events.__emitDisconnected(r);\n            this.__gameClient.onDisconnected = (r) => this.events.__emitDisconnected(r);\n            this.__gameClient.onReconnectStart = (r) => this.events.__emitReconnectStart(r);\n            this.__gameClient.onReconnectResult = (r, r2) => this.events.__emitReconnectResult(r, r2);\n            this.__gameClient.onRecvRoomMsg = (msg) => this.events.__emitRecvRoomMsg(msg);\n            this.__gameClient.onPlayerJoinRoom = (r, r2) => this.events.__emitPlayerJoinRoom(r, r2);\n            this.__gameClient.onPlayerLeaveRoom = (r, r2) => this.events.__emitPlayerLeaveRoom(r, r2);\n            this.__gameClient.onDismissRoom = (r) => this.events.__emitDismissRoom(r);\n            this.__gameClient.onStartFrameSync = (r, r2) => this.events.__emitStartFrameSync(r, r2);\n            this.__gameClient.onStopFrameSync = (r, r2) => this.events.__emitStopFrameSync(r, r2);\n            this.__gameClient.onRecvFrame = (r, r2) => this.events.__emitRecvFrame(r, r2);\n            this.__gameClient.onRequirePlayerSyncState = () => this.events.__emitRequirePlayerSyncState();\n            this.__gameClient.onChangePlayerNetworkState = (r) => this.events.__emitChangePlayerNetworkState(r);\n            this.__gameClient.onChangeCustomPlayerProfile = (r) => this.events.__emitChangeCustomPlayerProfile(r);\n            this.__gameClient.onChangeCustomPlayerStatus = (r) => this.events.__emitChangeCustomPlayerStatus(r);\n            this.__gameClient.onChangeRoom = (r) => this.events.__emitChangeRoom(r);\n            this.__gameClient.onChangePlayerTeam = (r) => this.events.__emitChangePlayerTeam(r);\n            this.__gameClient.onRoomAllPlayersMatchStart = (r, r2, r3) => this.events.__emitRoomAllPlayersMatchStart(r, r2, r3);\n            this.__gameClient.onRoomAllPlayersMatchResult = (r, r2, r3) => this.events.__emitRoomAllPlayersMatchResult(r, r2, r3);\n        }\n    }\n    /**关闭和释放gameClient*/\n    private async _disposeGameClient(): Promise<void> {\n        if (this.__gameClient) {\n            await this.__gameClient.disconnect();\n            this.__gameClient = undefined;\n        }\n    }\n    /**\n     * 创建gameClient并连接和认证\n     * @internal\n    */\n    async __createGameClient(gameServerUrl: string, playerPara: IPlayerInfoPara): Promise<IResult<null>> {\n\n        await this._disposeGameClient();\n\n        this.__gameClient = new GameClient(gameServerUrl, this._game.__myPlayerToken, undefined, this._roomWaitReconnectTime);\n        let authRet = await this.__gameClient.authorize(playerPara);\n        if (!authRet.succ) {\n            await this._disposeGameClient();\n            return Result.transition(authRet);\n        }\n\n        this._setGameClientHandler();\n        return Result.buildSucc(null);\n    }\n\n    /**\n     * 使用当前指定的玩家id和token，进行认证并尝试恢复之前所在房间(如果玩家之前在房间中断线的该房间还保留着玩家的信息才可以恢复)\n     * @param updateShowName 可同时更新玩家显示名\n     */\n    public async recoverPlayerRoom(updateShowName?: string): Promise<IResult<IRoomInfo>> {\n        let ret = await this._game.__hallClient\n            .recoverPlayerRoom(this._game.__myPlayerId, this._game.__myPlayerToken, updateShowName);\n        //这一步失败，一般是认证没通过\n        if (!ret.succ) return Result.transition(ret);\n\n        //如果不在房间中，就没必要恢复房间数据了\n        let roomOnlineInfo = ret.data;\n        if (!roomOnlineInfo || !roomOnlineInfo.gameServerUrl) {\n            return Result.buildErr('当前不在房间中，请到大厅操作！', ErrorCodes.RoomNotIn);\n        }\n\n        //开始游戏服务器的重连操作\n        await this._disposeGameClient();\n        this.__gameClient = new GameClient(roomOnlineInfo.gameServerUrl, this._game.__myPlayerToken, undefined, this._roomWaitReconnectTime);\n        let reconnectRet = await this.__gameClient.reconnect();\n        if (!reconnectRet.succ) {\n            await this._disposeGameClient();\n            return Result.transition(reconnectRet);\n        }\n        this._setGameClientHandler();\n\n        //成功\n        return Result.buildSucc(this.__gameClient.currRoomInfo!);\n    }\n\n    /**\n     * 获取房间在线信息（不进入房间也可以获取）\n     *\n     * @param roomId 房间ID\n     */\n    public async getOnlineRoomInfo(roomId: string): Promise<IResult<IRoomOnlineInfo>> {\n        let ret = await this._game.__hallClient.getRoomOnlineInfo(this._game.__myPlayerToken, roomId);\n        if (!ret.succ) return Result.transition(ret);\n        return Result.buildSucc(ret.data);\n    }\n\n    /**\n     * 筛选在线房间列表（不进入房间也可以获取）\n     * @param filter \n     * @param [skip] \n     * @param [limit] \n     */\n    public async filterRooms(filter: IRoomsFilterPara, skip?: number, limit?: number): Promise<IResult<IRoomsFilterRes>> {\n        let ret = await this._game.__hallClient\n            .filterRooms(this._game.__myPlayerToken, filter, skip, limit);\n        if (!ret.succ) return Result.transition(ret);\n        return Result.buildSucc(ret.data);\n    }\n\n    /**\n     * 创建一个自定义房间并进入, 成功则可使用 this.currRoomInfo 可获取当前所在的房间信息\n     *\n     * @param playerPara 玩家信息参数\n     * @param roomPara 房间信息参数\n     * @param teamId 同时加入的队伍id\n     */\n    public async createRoom(playerPara: IPlayerInfoPara, roomPara: ICreateRoomPara, teamId?: string): Promise<IResult<IRoomInfo>> {\n        let ret = await this._game.__hallClient.createRoom(this._game.__myPlayerToken, roomPara);\n        if (!ret.succ) return Result.transition(ret);\n\n        let createRet = await this.__createGameClient(ret.data.gameServerUrl!, playerPara);\n        if (!createRet.succ) return Result.transition(createRet);\n\n        let joinRet = await this.__gameClient!.joinRoom({ roomId: ret.data.roomId, teamId });\n        if (!joinRet.succ) return Result.transition(joinRet);\n\n        return joinRet;\n    }\n\n    /**\n     * Determines whether join game server room \n     * @param gameServerUrl \n     * @param playerPara \n     * @param roomId \n     * @param teamId\n     * @returns  join result\n     * @internal\n     */\n    async __joinGameServerRoom(gameServerUrl: string, playerPara: IPlayerInfoPara, joinRoomPara: IJoinRoomPara): Promise<IResult<IRoomInfo>> {\n        let createRet = await this.__createGameClient(gameServerUrl, playerPara);\n        if (!createRet.succ) return Result.transition(createRet);\n\n        let joinRet = await this.__gameClient!.joinRoom(joinRoomPara);\n        if (!joinRet.succ) return Result.transition(joinRet);\n\n        return joinRet;\n    }\n    /**\n     * 加入指定房间, 成功则可使用 this.currRoomInfo 可获取当前所在的房间信息\n     *\n     * @param playerPara 玩家信息参数\n     * @param roomId 房间ID\n     * @param teamId 同时加入的队伍id\n     * @deprecated 本重载已弃用, 将在下个版本移除!!\n     */\n    public async joinRoom(playerPara: IPlayerInfoPara, roomId: string, teamId?: string): Promise<IResult<IRoomInfo>>;\n    /**\n     * 加入指定房间, 成功则可使用 this.currRoomInfo 可获取当前所在的房间信息\n     *\n     * @param playerPara 玩家信息参数\n     * @param joinRoomPara 加入房间参数, 根据房间的加入模式需要传入对应的数据\n     */\n    public async joinRoom(playerPara: IPlayerInfoPara, joinRoomPara: IJoinRoomPara): Promise<IResult<IRoomInfo>>;\n    /**\n     * 加入指定房间, 成功则可使用 this.currRoomInfo 可获取当前所在的房间信息\n     *\n     * @param playerPara 玩家信息参数\n     * @param roomId 房间ID\n     * @param teamId 同时加入的队伍id\n     */\n    public async joinRoom(playerPara: IPlayerInfoPara, para: IJoinRoomPara | string, teamId?: string): Promise<IResult<IRoomInfo>> {\n        let joinRoomPara: IJoinRoomPara;\n        if (typeof (para) === 'string') {\n            joinRoomPara = {\n                roomId: para,\n                teamId,\n            };\n        } else {\n            joinRoomPara = para;\n        }\n        let ret = await this._game.__hallClient.getRoomOnlineInfo(this._game.__myPlayerToken, joinRoomPara.roomId);\n        if (!ret.succ) return Result.transition(ret);\n\n        return await this.__joinGameServerRoom(ret.data.gameServerUrl!, playerPara, joinRoomPara);\n    }\n\n    /**\n     * 加入指定游戏服务器的房间, 成功则可使用 this.currRoomInfo 可获取当前所在的房间信息\n     * \n     * @deprecated 本重载已弃用, 将在下个版本移除!! 请使用 joinRoom\n     *\n     * @param gameServerUrl 游戏服务器地址\n     * @param playerPara 玩家信息参数\n     * @param roomId 房间ID\n     * @param teamId 同时加入的队伍id\n     */\n    public async joinRoomByServer(gameServerUrl: string, playerPara: IPlayerInfoPara, roomId: string, teamId?: string): Promise<IResult<IRoomInfo>>;\n    /**\n     * 加入指定游戏服务器的房间, 成功则可使用 this.currRoomInfo 可获取当前所在的房间信息\n     * \n     * @deprecated 本重载已弃用, 将在下个版本移除!! 请使用 joinRoom\n     *\n     * @param gameServerUrl 游戏服务器地址\n     * @param playerPara 玩家信息参数\n     * @param para 加入房间参数|房间ID\n     * @param teamId 同时加入的队伍id\n     */\n    public async joinRoomByServer(gameServerUrl: string, playerPara: IPlayerInfoPara, para: IJoinRoomPara): Promise<IResult<IRoomInfo>>;\n    /**\n     * 加入指定游戏服务器的房间, 成功则可使用 this.currRoomInfo 可获取当前所在的房间信息\n     * \n     * @deprecated 本重载已弃用, 将在下个版本移除!! 请使用 joinRoom\n     *\n     * @param gameServerUrl 游戏服务器地址\n     * @param playerPara 玩家信息参数\n     * @param para 加入房间参数|房间ID\n     * @param teamId 同时加入的队伍id\n     */\n    public async joinRoomByServer(gameServerUrl: string, playerPara: IPlayerInfoPara, para: IJoinRoomPara | string, teamId?: string): Promise<IResult<IRoomInfo>> {\n        let joinRoomPara: IJoinRoomPara;\n        if (typeof (para) === 'string') {\n            joinRoomPara = {\n                roomId: para,\n                teamId,\n            };\n        } else {\n            joinRoomPara = para;\n        }\n        return await this.__joinGameServerRoom(gameServerUrl, playerPara, joinRoomPara);\n    }\n\n    /**\n     * 加入或创建指定条件的房间, 服务器存在指定条件并且未满房间, 则优先加入房间, 否则创建同条件的房间, 可能存在创建失败(匹配条件的房间超过服务器限额)\n     * @param playerPara \n     * @param joinRoomPara \n     * @param matchOrCreateRoomPara \n     */\n    public async joinOrCreateRoom(playerPara: IPlayerInfoPara, joinRoomPara: IJoinRoomPara, matchOrCreateRoomPara: IGetOrCreateRoomPara): Promise<IResult<IRoomInfo>> {\n\n        let getOrCreateRet = await this._game.__hallClient.getOrCreateRoom(this._game.__myPlayerToken, matchOrCreateRoomPara);\n        if (!getOrCreateRet.succ) return Result.transition(getOrCreateRet);\n\n        if (getOrCreateRet.data.createRoomOnlineInfo) {\n            // 创建了房间, 则直接进入   \n            return await this.__joinGameServerRoom(getOrCreateRet.data.createRoomOnlineInfo.gameServerUrl!,\n                playerPara, joinRoomPara);\n        }\n        if (getOrCreateRet.data.matchRoomOnlineInfoList?.length) {\n            // 匹配到房间了, 按顺序尝试加入\n            for (const room of getOrCreateRet.data.matchRoomOnlineInfoList) {\n                let joinRet = await this.__joinGameServerRoom(room.gameServerUrl!, playerPara, joinRoomPara);\n                if (joinRet.succ) return joinRet;\n            }\n            // 都失败了,则客户端自行选择创建房间!\n            return await this.createRoom(playerPara, matchOrCreateRoomPara.createRoomPara, joinRoomPara.teamId);\n        }\n        return Result.buildErr('未知错误: 没有匹配的结果类型!', ErrorCodes.Exception);\n\n    }\n\n    /**\n     * 退出当前房间\n     * @returns  \n     */\n    public async leaveRoom(): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.leaveRoom();\n        return ret;\n    }\n    /**\n     * 【仅房主】解散当前房间\n     * @returns  \n     */\n    public async dismissRoom(): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.dismissRoom();\n        return ret;\n    }\n    /**\n     * 修改房间信息(注意,只能房主操作),同时同步更新本地当前房间信息\n     *\n     * @param changePara\n     */\n    public async changeRoom(changePara: IChangeRoomPara): Promise<IResult<IRoomInfo>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.changeRoom(changePara);\n        return ret;\n    }\n\n    /**\n     * 修改自己的玩家自定义属性,如果当前在房间中会同时会触发通知(房间中所有玩家)\n     *\n     * @param customPlayerProfile\n     * @param [robotPlayerId] 可以指定自己的房间机器人\n     */\n    public async changeCustomPlayerProfile(customPlayerProfile: string, robotPlayerId?: string): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.changeCustomPlayerProfile(customPlayerProfile, robotPlayerId);\n        return ret;\n    }\n\n    /**\n     * 修改自己的玩家自定义状态,如果当前在房间中会同时会触发通知(房间中所有玩家)\n     *\n     * @param customPlayerStatus\n     * @param [robotPlayerId] 可以指定自己的房间机器人\n     */\n    public async changeCustomPlayerStatus(customPlayerStatus: number, robotPlayerId?: string): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.changeCustomPlayerStatus(customPlayerStatus, robotPlayerId);\n        return ret;\n    }\n    /**\n     *变更自己所在队伍\n     *\n     * @param newTeamId 传undefined表示改为无队伍; 如果有指定队伍, 但房间不存在该队伍id, 则需要房间开启自由队伍选项\n     * @param [robotPlayerId] 可以指定自己的房间机器人\n     */\n    public async changePlayerTeam(newTeamId?: string, robotPlayerId?: string): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.changePlayerTeam(newTeamId, robotPlayerId);\n        return ret;\n    }\n\n    /**\n     * 发送房间消息（自定义消息），可以指定房间里的全部玩家或部分玩家或其他玩家\n     *\n     * @public\n     * @param roomMsg \n     * @param [robotPlayerId] 可以指定自己的房间机器人\n     */\n    public async sendRoomMsg(roomMsg: IRoomMsg, robotPlayerId?: string): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.sendRoomMsg(roomMsg, robotPlayerId);\n        return ret;\n    }\n\n    /**\n     * 开始帧同步\n     *\n     * @public\n     */\n    public async startFrameSync(): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.startFrameSync();\n        return ret;\n    }\n    /**\n     * 停止帧同步\n     *\n     * @public\n     */\n    public async stopFrameSync(): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.stopFrameSync();\n        return ret;\n    }\n\n    /**\n     * 发送玩家输入帧(加入到下一帧的操作列表)\n     *\n     * @public\n     * @param inpOperates \n     * @param [robotPlayerId] 可以指定自己的房间机器人\n     */\n    public async sendFrame(inpOperates: IPlayerInputOperate[], robotPlayerId?: string): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.playerInpFrame(inpOperates, robotPlayerId);\n        return ret;\n    }\n\n\n    /**\n     * 请求追帧数据(当前的所有帧数据[+同步状态数据])\n     *\n     * @public\n     */\n    public async requestAfterFrames(): Promise<IResult<IAfterFrames>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.requestAfterFrames();\n        return ret;\n    }\n\n\n    /**\n     * 自主请求帧数组\n     *\n     * @public\n     * @param beginFrameIndex 起始帧索引(包含)\n     * @param endFrameIndex 结束帧索引(包含)\n     */\n    public async requestFrames(beginFrameIndex: number, endFrameIndex: number): Promise<IResult<IGameSyncFrame[]>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.requestFrames(beginFrameIndex, endFrameIndex);\n        return ret;\n    }\n\n\n    /**\n     * 玩家发送本地的同步状态数据(有启用状态同步的时候才可以用)\n     *\n     * @public\n     * @param stateData\n     * @param stateFrameIndex\n     */\n    public async playerSendSyncState(stateData: object, stateFrameIndex: number): Promise<IResult<null>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.playerSendSyncState(stateData, stateFrameIndex);\n        return ret;\n    }\n\n\n    /**\n     * [在或不在房间中都可以发起匹配] 发起单独的玩家匹配, 成功则返回 [匹配请求id, 即 matchReqId] , 指定匹配结果回调来获得本次匹配请求结果\n     *\n     * @param matchParamsFromPlayer 匹配参数, 注意,参与匹配的这些玩家不会收到服务器通知\n     * @param matchResultCallback 可指定匹配结果回调\n     */\n    public async requestMatchFromPlayers(matchParamsFromPlayer: IMatchParamsFromPlayer\n        , matchResultCallback: (matchRet: IResult<IMatchResult>) => void): Promise<IResult<string>> {\n        return await this.requestPlayersMatch(matchParamsFromPlayer, matchResultCallback).waitResult();\n    }\n    /**\n     * [在或不在房间中都可以发起匹配] 发起单独的玩家匹配, 成功则返回 [匹配请求id, 即 matchReqId] , 指定匹配结果回调来获得本次匹配请求结果\n     *\n     * @param matchParamsFromPlayer 匹配参数, 注意,参与匹配的这些玩家不会收到服务器通知\n     * @param matchResultCallback 可指定匹配结果回调\n     */\n    private requestPlayersMatch(matchParamsFromPlayer: IMatchParamsFromPlayer\n        , matchResultCallback: (matchRet: IResult<IMatchResult>) => void): ICancelableExec<string> {\n        let waitCancel: ICancelableExec<IMatchResult> | null = null;\n        let task = new Promise<IResult<string>>(async (res) => {\n            let ret = await this._game.__hallClient.requestMatch(this._game.__myPlayerToken, matchParamsFromPlayer);\n            if (!ret.succ) {\n                return res(ret);\n            }\n            //成功请求匹配, 开始异步等待结果\n            waitCancel = this._startWaitMatchResultFromPlayers(matchParamsFromPlayer, ret.data);\n            waitCancel.waitResult().then(matchResultCallback);\n            //先把请求匹配结果返回\n            return res(ret);\n        });\n        return {\n            waitResult() {\n                return task;\n            },\n            async cancel() {\n                await waitCancel?.cancel();\n            },\n        };\n    }\n    /**\n     * 开始等待单独的玩家匹配结果, 有结果会触发回调\n     *\n     * @param matchParamsFromPlayer\n     * @param matchReqId 匹配请求id\n     */\n    private _startWaitMatchResultFromPlayers(matchParamsFromPlayer: IMatchParamsFromPlayer, matchReqId: string): ICancelableExec<IMatchResult> {\n        let timeoutTS = Date.now() + (matchParamsFromPlayer.matchTimeoutSec ?? 60) * 1000 + 2000;\n        let isCancel = false;\n        let currDelayCancel: ICancelableExec<any> | null = null;\n        let task = new Promise<IResult<IMatchResult>>(async res => {\n            while (Date.now() < timeoutTS) {\n                if (isCancel) {\n                    break;\n                }\n                currDelayCancel = delayCanCancel(500);\n                await currDelayCancel.waitResult();\n                if (isCancel) {\n                    break;\n                }\n                let ret = await this._game.__hallClient.queryMatch(this._game.__myPlayerToken, matchReqId);\n                if (ret) {\n                    return res(ret);\n                }\n            }\n            if (isCancel) {\n                res(Result.buildErr('匹配取消', ErrorCodes.MatchRequestCancelled));\n            } else {\n                res(Result.buildErr('匹配超时', ErrorCodes.MatchQueryTimeout));\n            }\n        });\n        return {\n            waitResult() {\n                return task;\n            },\n            async cancel() {\n                isCancel = true;\n                await currDelayCancel?.cancel();\n            },\n        };\n    }\n    /**\n     * 取消单独的玩家匹配, 也会触发匹配回调. 同时因为有并发可能, 即在结果已出即将收到时,提交取消成功,但还是会触发匹配成功的回调\n     *\n     * @param matchReqId 匹配请求id\n     */\n    public async cancelMatchFromPlayers(matchReqId: string): Promise<IResult<null>> {\n        let ret = await this._game.__hallClient.cancelMatch(this._game.__myPlayerToken, matchReqId);\n        return ret;\n    }\n\n\n\n    /**\n     * 玩家创建房间机器人(退出房间会同步退出)\n     * @param createPa \n     * @param [teamId] \n     * @returns 创建的机器人信息\n     */\n    public async createRoomRobot(createPa: IPlayerInfoPara, teamId?: string): Promise<IResult<IPlayerInfo>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.createRoomRobot(createPa, teamId);\n        return ret;\n    }\n\n    /**\n     * 玩家的指定房间机器人退出房间(即销毁)\n     * @param robotPlayerId \n     * @returns 销毁的机器人信息\n     */\n    public async roomRobotLeave(robotPlayerId: string): Promise<IResult<IPlayerInfo>> {\n        if (!this.__gameClient) return Result.buildErr('当前不在房间中!', ErrorCodes.RoomNotIn);\n        let ret = await this.__gameClient.roomRobotLeave(robotPlayerId);\n        return ret;\n    }\n}"]}