{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/tsgf-sdk/src/tsgf/AClient.ts"],"names":["AHttpClient","AWsClient","getGlobalSDKProvider","constructor","proto","options","client","env","Error","getHttpClient","getWsClient"],"mappings":";;;oDASaA,W,EAYAC,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlBJC,MAAAA,oB,iBAAAA,oB;;;;;;;AAET;AACA;AACA;AACA;6BACaF,W,GAAN,MAAMA,WAAN,CAAsD;AAEzDG,QAAAA,WAAW,CAACC,KAAD,EAAmCC,OAAnC,EAA6E;AAAA;;AAAA,eADjFC,MACiF;AACpF,cAAMC,GAAG,WAAG;AAAA;AAAA,6DAAH,qBAAG,KAAwBA,GAApC;AACA,cAAI,CAACA,GAAL,EAAU,MAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACV,eAAKF,MAAL,GAAcC,GAAG,CAACE,aAAJ,CAAmBL,KAAnB,EAA0BC,OAA1B,CAAd;AACH;;AANwD,O;AAQ7D;AACA;AACA;AACA;;;2BACaJ,S,GAAN,MAAMA,SAAN,CAAoD;AAEvDE,QAAAA,WAAW,CAACC,KAAD,EAAmCC,OAAnC,EAA2E;AAAA;;AAAA,eAD/EC,MAC+E;AAClF,cAAMC,GAAG,YAAG;AAAA;AAAA,6DAAH,qBAAG,MAAwBA,GAApC;AACA,cAAI,CAACA,GAAL,EAAU,MAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACV,eAAKF,MAAL,GAAcC,GAAG,CAACG,WAAJ,CAAiBN,KAAjB,EAAwBC,OAAxB,CAAd;AACH;;AANsD,O","sourcesContent":["\nimport { BaseHttpClient, BaseHttpClientOptions, BaseWsClient, BaseWsClientOptions } from \"tsrpc-base-client\";\nimport { BaseServiceType, ServiceProto } from \"tsrpc-proto\";\nimport { getGlobalSDKProvider } from \"./Provider\";\n\n/**\n * 抽象的HTTP客户端,根据具体的环境,接入对应的客户端,让引用类型的地方不需要判断\n * @typeParam ServiceType \n */\nexport class AHttpClient<ServiceType extends BaseServiceType>{\n    public client: BaseHttpClient<ServiceType>;\n    constructor(proto: ServiceProto<ServiceType>, options?: Partial<BaseHttpClientOptions>) {\n        const env = getGlobalSDKProvider()?.env;\n        if (!env) throw new Error('GlobalProvider.env需要提供环境实现!');\n        this.client = env.getHttpClient!(proto, options);\n    }\n}\n/**\n * 抽象的Websocket客户端,根据具体的环境,接入对应的客户端,让引用类型的地方不需要判断\n * @typeParam ServiceType \n */\nexport class AWsClient<ServiceType extends BaseServiceType>{\n    public client: BaseWsClient<ServiceType>;\n    constructor(proto: ServiceProto<ServiceType>, options?: Partial<BaseWsClientOptions>) {\n        const env = getGlobalSDKProvider()?.env;\n        if (!env) throw new Error('GlobalProvider.env需要提供环境实现!');\n        this.client = env.getWsClient!(proto, options);\n    }\n}\n"]}