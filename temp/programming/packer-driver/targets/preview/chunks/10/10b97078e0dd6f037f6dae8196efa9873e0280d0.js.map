{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/shared/tsgfServer/room/Models.ts"],"names":["teamPlayerIdsAdd","targetTeams","add","targetTeam","find","t","teamId","team","playerIds","slice","push","appPid","includes","teamPlayerIdsAddSingle","addPlayerId","addTeamId","teamPlayerIdsSubtract","subtract","removeEmptyTeam","targetTeamI","findIndex","p","length","splice","teamPlayerIdsSubtractSingle","subtractPlayerId","subtractTeamId","arrRemoveItems"],"mappings":"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","sourcesContent":["import { IGameServerInfo } from \"../../hallClient/Models\";\nimport { EPrivateRoomJoinMode, ITeamPlayerIds } from \"../../tsgf/room/IRoomInfo\";\nimport { arrRemoveItems } from \"../../tsgf/Utils\";\n\n\n/**基础的房间注册信息*/\nexport interface IRoomRegInfo {\n    /**所属应用id*/\n    appId: string;\n    /**房间ID，全局唯一*/\n    roomId: string;\n    /**房间名称*/\n    roomName: string;\n    /**房间类型自定义字符串*/\n    roomType?: string;\n    /**所属玩家ID*/\n    ownerPlayerId: string;\n    /**房间最大玩家数*/\n    maxPlayers: number;\n    /**房间当前空位数(可加多少个玩家)*/\n    emptySeats: number;\n    /**创建时间(毫秒时间戳)*/\n    createTime: number;\n    /**到期时间(毫秒时间戳), 到了将被清理,以至于无法加入新房间,在线玩家不会受影响*/\n    expireTime: number;\n    /**是否私有房间，私有房间不参与匹配*/\n    isPrivate: 0 | 1;\n    /**私有房间的加入模式*/\n    privateRoomJoinMode?: EPrivateRoomJoinMode;\n    /**如果私有房间的加入模式是密码, 则必填本密码字段*/\n    privateRoomPassword?: string;\n    /**当前队伍玩家id列表,如果没有队伍则[{teamId='',playerIds:[...所有玩家id都在这...]}]*/\n    teamsPlayerIds: ITeamPlayerIds[];\n    /**挂在哪个游戏服务器下（服务器节点id）*/\n    gameServerNodeId: string;\n}\n\n\n/**\n * 给队伍玩家数组添加另一个队伍玩家数组, 结果放在 targetTeams 中\n *\n * @param targetTeams\n * @param add\n */\nexport function teamPlayerIdsAdd(targetTeams: ITeamPlayerIds[], add: ITeamPlayerIds[]) {\n    for (let team of add) {\n        let targetTeam = targetTeams.find(t => t.teamId === team.teamId ?? '');\n        if (!targetTeam) {\n            targetTeam = { teamId: team.teamId ?? '', playerIds: team.playerIds.slice() };\n            targetTeams.push(targetTeam);\n        } else {\n            for (let appPid of team.playerIds) {\n                if (!targetTeam.playerIds.includes(appPid)) {\n                    targetTeam.playerIds.push(appPid);\n                }\n            }\n        }\n    }\n}\n/**\n * 给队伍玩家数组添加一个单个队伍玩家, 结果放在 targetTeams 中\n *\n * @param targetTeams\n * @param addTeamId 如果无队伍则会使用''\n * @param addPlayerId\n */\nexport function teamPlayerIdsAddSingle(targetTeams: ITeamPlayerIds[], addPlayerId: string, addTeamId: string | undefined) {\n    if (!addTeamId) addTeamId = '';\n    let targetTeam = targetTeams.find(t => t.teamId === addTeamId);\n    if (!targetTeam) {\n        targetTeam = { teamId: addTeamId, playerIds: [addPlayerId] };\n        targetTeams.push(targetTeam);\n    } else {\n        if (!targetTeam.playerIds.includes(addPlayerId)) {\n            targetTeam.playerIds.push(addPlayerId);\n        }\n    }\n}\n\n/**\n * 从一个队伍玩家数组中移除另一个队伍玩家数组的数据\n *\n * @param targetTeams\n * @param subtract\n * @param removeEmptyTeam=true\n */\nexport function teamPlayerIdsSubtract(targetTeams: ITeamPlayerIds[], subtract: ITeamPlayerIds[], removeEmptyTeam: boolean = true) {\n    for (let team of subtract) {\n        let targetTeamI = targetTeams.findIndex(t => t.teamId === team.teamId ?? '');\n        let targetTeam = targetTeams[targetTeamI];\n        if (targetTeam) {\n            for (let appPid of team.playerIds) {\n                arrRemoveItems(targetTeam.playerIds, p => p === appPid);\n            }\n            if (removeEmptyTeam && targetTeam.playerIds.length <= 0) {\n                //这个队伍下的玩家都没了直接删除\n                targetTeams.splice(targetTeamI, 1);\n            }\n        }\n    }\n}\n/**\n *从一个队伍玩家数组中移除一个单个的队伍玩家\n *\n * @param targetTeams\n * @param subtractTeamId 如果无队伍则会使用''\n * @param subtractPlayerId\n * @param removeEmptyTeam=true\n */\nexport function teamPlayerIdsSubtractSingle(targetTeams: ITeamPlayerIds[], subtractPlayerId: string, subtractTeamId: string | undefined, removeEmptyTeam: boolean = true) {\n    let targetTeamI = targetTeams.findIndex(t => t.teamId === subtractTeamId ?? '');\n    let targetTeam = targetTeams[targetTeamI];\n    if (targetTeam) {\n        arrRemoveItems(targetTeam.playerIds, p => p === subtractPlayerId);\n        if (removeEmptyTeam && targetTeam.playerIds.length <= 0) {\n            //这个队伍下的玩家都没了直接删除\n            targetTeams.splice(targetTeamI, 1);\n        }\n    }\n}"]}