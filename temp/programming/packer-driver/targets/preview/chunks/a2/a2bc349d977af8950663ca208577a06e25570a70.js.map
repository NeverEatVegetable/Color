{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/tsgf-sdk/src/tsgf/room/IGameFrame.ts"],"names":["EPlayerInputFrameType"],"mappings":";;;;;;;;;;;;;;AACA;uCACYA,qB,0BAAAA,qB;AAAAA,QAAAA,qB,CAAAA,qB;AAAAA,QAAAA,qB,CAAAA,qB;AAAAA,QAAAA,qB,CAAAA,qB;AAAAA,QAAAA,qB,CAAAA,qB;eAAAA,qB;;AAWZ;;AAUA;;AAYA;;AAQA","sourcesContent":["\n/**玩家输入帧类型*/\nexport enum EPlayerInputFrameType {\n    /**输入操作*/\n    Operates = 1,\n    /**房间帧同步期间, 玩家进入房间, 系统会插入一个进入房间的输入帧(再收到通知后才有), 额外字段:IPlayerInputFrame.playerInfo:IPlayerInfo*/\n    JoinRoom = 2,\n    /**房间帧同步期间, 玩家离开房间(或断线不再重连后), 系统会插入一个离开房间的输入帧, 额外字段:IPlayerInputFrame.playerInfo:IPlayerInfo*/\n    LeaveRoom = 3,\n    /**玩家进入游戏: 房间开始帧同步时,每个在房间的玩家都加入一帧*/\n    PlayerEnterGame = 4,\n}\n\n/**游戏同步帧*/\nexport interface IGameSyncFrame {\n    /**帧索引*/\n    frameIndex: number;\n    /** 所有玩家的输入列表 (如果玩家提交输入的频率很高,里面有重复的玩家数据,即同帧时系统不会合并同玩家输入) null则为空帧*/\n    playerInputs: IFramePlayerInput[] | null;\n    /**可自行拓展其他字段*/\n    [key: string]: any;\n}\n\n/**玩家输入(包含多个操作)*/\nexport interface IFramePlayerInput {\n    /** 来源的玩家ID */\n    playerId: string;\n    /**输入帧类型*/\n    inputFrameType: EPlayerInputFrameType;\n    /**玩家在本帧的操作列表. inputFrameType == EPlayerInputFrameType.Operates 有数据*/\n    operates?: IPlayerInputOperate[];\n    /**可自行拓展其他字段*/\n    [key: string]: any;\n}\n\n/**玩家输入的操作内容*/\nexport interface IPlayerInputOperate {\n    [key: string]: any;\n}\n\n\n\n\n/**追帧数据*/\nexport interface IAfterFrames {\n    /**状态同步的数据(如果没启用状态同步则可忽略)*/\n    stateData: any;\n    /**状态同步所在帧索引, 即追帧的索引(afterFrames)从下一帧开始, 如果没启用状态同步则可忽略,同时值为-1*/\n    stateFrameIndex: number;\n    /**要追帧数组, 允许仅包含输入帧, 但要求顺序, 并且范围为[afterStartFrameIndex ~ afterEndFrameIndex] */\n    afterFrames: IGameSyncFrame[];\n    /**追帧数组起始帧索引(包含)*/\n    afterStartFrameIndex: number;\n    /**追帧数组的截止帧索引(包含)*/\n    afterEndFrameIndex: number;\n    /**服务端同步帧率(每秒多少帧)*/\n    serverSyncFrameRate: number;\n}"]}