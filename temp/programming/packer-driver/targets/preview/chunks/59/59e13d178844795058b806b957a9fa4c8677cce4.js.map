{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/shared/tsgfServer/BaseBLL.ts"],"names":["BaseBLL","exec","run","dal","getDAL","waitResult","cancel","closeCurrDb","selectAll","search","orderby","limitCount","where","buildWhereSql","whereSql","params","selectPages","pageSize","pageIndex","selectSingle"],"mappings":";;;8BAKsBA,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAAAA,O,GAAf,MAAeA,OAAf,CAAuE;AAKhEC,QAAAA,IAAI,CAAaC,GAAb,EAA2F;AACrG,cAAIC,GAAG,GAAG,KAAKC,MAAL,EAAV;AACA,iBAAO;AACHC,YAAAA,UAAU,EAAE,MAAM;AACd,qBAAOH,GAAG,CAACC,GAAD,CAAV;AACH,aAHE;AAIHG,YAAAA,MAAM;AAAA,8CAAE,aAAY;AAChB,sBAAMH,GAAG,CAACI,WAAJ,EAAN;AACH,eAFK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJH,WAAP;AAQH;AAGD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACWC,QAAAA,SAAS,CAACC,MAAD,EAAuBC,OAAvB,EAAmDC,UAAnD,EAAyG;AACrH,cAAIC,KAAK,GAAG,KAAKC,aAAL,CAAmBJ,MAAnB,CAAZ;AACA,iBAAO,KAAKR,IAAL,iCAAU,WAAOE,GAAP,EAAe;AAC5B,yBAAaA,GAAG,CAACK,SAAJ,CAAc,GAAd,EAAmB,IAAnB,EAAyBI,KAAK,CAACE,QAA/B,EAAyCF,KAAK,CAACG,MAA/C,EAAuDL,OAAvD,EAAgEC,UAAhE,CAAb;AACH,WAFM,EAAP;AAGH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACWK,QAAAA,WAAW,CAACC,QAAD,EAAmBC,SAAnB,EAAsCT,MAAtC,EAA4DC,OAA5D,EAA2G;AACzH,cAAIE,KAAK,GAAG,KAAKC,aAAL,CAAmBJ,MAAnB,CAAZ;AACA,iBAAO,KAAKR,IAAL,iCAAU,WAAOE,GAAP,EAAe;AAC5B,yBAAaA,GAAG,CAACa,WAAJ,CAAgBC,QAAhB,EAA0BC,SAA1B,EAAqC,GAArC,EAA0C,IAA1C,EAAgDN,KAAK,CAACE,QAAtD,EAAgEF,KAAK,CAACG,MAAtE,EAA8EL,OAA9E,CAAb;AACH,WAFM,EAAP;AAGH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACWS,QAAAA,YAAY,CAACV,MAAD,EAAsD;AACrE,cAAIG,KAAK,GAAG,KAAKC,aAAL,CAAmBJ,MAAnB,CAAZ;AACA,iBAAO,KAAKR,IAAL,iCAAU,WAAOE,GAAP,EAAe;AAC5B,yBAAaA,GAAG,CAACgB,YAAJ,CAAiB,IAAjB,EAAuBP,KAAK,CAACE,QAA7B,EAAuCF,KAAK,CAACG,MAA7C,CAAb;AACH,WAFM,EAAP;AAGH;;AA5DyE,O","sourcesContent":["import { ICancelableExec } from \"../tsgf/ICancelable\";\nimport { IResult } from \"../tsgf/Result\";\nimport { BaseDAL, OrderBy } from \"./BaseDAL\";\n\n\nexport abstract class BaseBLL<Model, SearchModel, DAL extends BaseDAL<Model>> {\n\n    protected abstract getDAL(): DAL;\n    protected abstract buildWhereSql(search?: SearchModel): { whereSql: string | null, params: any };\n\n    protected exec<ResultData>(run: (dal: DAL) => Promise<IResult<ResultData>>): ICancelableExec<ResultData> {\n        let dal = this.getDAL();\n        return {\n            waitResult: () => {\n                return run(dal);\n            },\n            cancel: async () => {\n                await dal.closeCurrDb();\n            }\n        };\n    }\n\n\n    /**\n     * 查询多行\n     *\n     * @public\n     * @param orderby\n     * @param limitCount\n     */\n    public selectAll(search?: SearchModel, orderby?: OrderBy[] | null, limitCount?: number | null): ICancelableExec<Model[]> {\n        let where = this.buildWhereSql(search);\n        return this.exec(async (dal) => {\n            return await dal.selectAll('*', null, where.whereSql, where.params, orderby, limitCount);\n        });\n    }\n\n    /**\n     * 分页查询\n     *\n     * @public\n     * @param pageSize 一页几条\n     * @param pageIndex 页码，从1开始\n     * @param orderby\n     */\n    public selectPages(pageSize: number, pageIndex: number, search?: SearchModel, orderby?: OrderBy[]): ICancelableExec<Model[]> {\n        let where = this.buildWhereSql(search);\n        return this.exec(async (dal) => {\n            return await dal.selectPages(pageSize, pageIndex, '*', null, where.whereSql, where.params, orderby);\n        });\n    }\n\n    /**\n     * 查询单条\n     *\n     * @public\n     * @param fromSqlApp\n     * @param whereSql\n     * @param params\n     */\n    public selectSingle(search?: SearchModel): ICancelableExec<Model | null> {\n        let where = this.buildWhereSql(search);\n        return this.exec(async (dal) => {\n            return await dal.selectSingle(null, where.whereSql, where.params);\n        });\n    }\n\n\n}"]}