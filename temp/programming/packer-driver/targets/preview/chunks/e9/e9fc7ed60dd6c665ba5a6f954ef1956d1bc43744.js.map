{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/gameServer/api/ApiQueryMatch.ts"],"names":["ApiQueryMatch","call","ret","getGameServer","roomMgr","queryMatch","conn","currPlayer","succ","error","err","code","matchResult","data"],"mappings":";;;;;;;;;WAGsBA,a;;;;;uCAAf,WAA6BC,IAA7B,EAA8E;AAEjF,UAAIC,GAAG,SAASD,IAAI,CAACE,aAAL,GAAqBC,OAArB,CACXC,UADW,CACAJ,IAAI,CAACK,IAAL,CAAUC,UADV,CAAhB;;AAEA,UAAI,CAACL,GAAG,CAACM,IAAT,EAAe;AACX,qBAAaP,IAAI,CAACQ,KAAL,CAAWP,GAAG,CAACQ,GAAf,EAAoB;AAAEC,UAAAA,IAAI,EAAET,GAAG,CAACS;AAAZ,SAApB,CAAb;AACH;;AACD,mBAAaV,IAAI,CAACO,IAAL,CAAU;AACnBI,QAAAA,WAAW,EAAEV,GAAG,CAACW;AADE,OAAV,CAAb;AAGH,K;;;;;;;;;;;;;;;;2BAVqBb,a","sourcesContent":["import { ReqQueryMatch, ResQueryMatch } from \"../../shared/gameClient/protocols/PtlQueryMatch\";\nimport { GameApiCall } from \"../GameServer\";\n\nexport async function ApiQueryMatch(call: GameApiCall<ReqQueryMatch, ResQueryMatch>) {\n    \n    let ret = await call.getGameServer().roomMgr\n        .queryMatch(call.conn.currPlayer);\n    if (!ret.succ) {\n        return await call.error(ret.err, { code: ret.code });\n    }\n    return await call.succ({\n        matchResult: ret.data\n    });\n}"]}