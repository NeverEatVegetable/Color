{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/src/shared/tsgfServerEDB/BLL.ts"],"names":["SimpleAppHelper","AppBLL","Result","BaseBLL","AppDAL","selectAll","cancel","waitResult","buildSucc","allApps","selectSingleByAppId","appId","find","a","appName","appSecret","addTime","Date","parse","getDAL","buildWhereSql","search","whereSql","params","hasA","appNameLike","Ins"],"mappings":";;;uDAQaA,e,EAqCAC,M;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA5CKC,MAAAA,M,iBAAAA,M;;AACTC,MAAAA,O,iBAAAA,O;;AAEAC,MAAAA,M,iBAAAA,M;;;;;;;AAGT;iCACaJ,e,GAAN,MAAMA,eAAN,CAAsB;AAUF,eAATK,SAAS,GAA4B;AAC/C,iBAAO;AACGC,YAAAA,MAAN,GAA8B;AAAA;AAC7B,aAFE;;AAGGC,YAAAA,UAAN,GAA6C;AAAA;AACzC,uBAAO;AAAA;AAAA,sCAAOC,SAAP,CAAiBR,eAAe,CAACS,OAAjC,CAAP;AADyC;AAE5C;;AALE,WAAP;AAOH;;AACgC,eAAnBC,mBAAmB,CAACC,KAAD,EAA8C;AAC3E,iBAAO;AACGL,YAAAA,MAAN,GAA8B;AAAA;AAC7B,aAFE;;AAGGC,YAAAA,UAAN,GAAkD;AAAA;AAAA;;AAC9C,uBAAO;AAAA;AAAA,sCAAOC,SAAP,0BAAiBR,eAAe,CAACS,OAAhB,CAAwBG,IAAxB,CAA6BC,CAAC,IAAIA,CAAC,CAACF,KAAF,IAAWA,KAA7C,CAAjB,oCAAwE,IAAxE,CAAP;AAD8C;AAEjD;;AALE,WAAP;AAOH;;AA3BwB,O;;AAAhBX,MAAAA,e,CACMS,O,GAAkB,CAC7B;AACIE,QAAAA,KAAK,EAAE,SADX;AAEIG,QAAAA,OAAO,EAAE,MAFb;AAGIC,QAAAA,SAAS,EAAE,6BAHf;AAIIC,QAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAW,YAAX,CAAT;AAJb,OAD6B,C;;wBAoCxBjB,M,GAAN,MAAMA,MAAN;AAAA;AAAA,8BAAuD;AAGhDkB,QAAAA,MAAM,GAAG;AACf,iBAAO;AAAA;AAAA,iCAAP;AACH;;AAESC,QAAAA,aAAa,CAACC,MAAD,EAA+D;AAClF,cAAIC,QAAQ,GAAG,IAAf;AACA,cAAIC,MAAW,GAAG,IAAlB;;AACA,cAAIF,MAAJ,EAAY;AACRC,YAAAA,QAAQ,GAAG,EAAX;AACAC,YAAAA,MAAM,GAAG,EAAT;AACA,gBAAIC,IAAI,GAAG,KAAX;;AACA,gBAAIH,MAAM,CAACV,KAAX,EAAkB;AACd,kBAAIa,IAAJ,EAAUF,QAAQ,IAAI,OAAZ;AACVA,cAAAA,QAAQ,IAAI,kBAAZ;AACAC,cAAAA,MAAM,CAACZ,KAAP,GAAeU,MAAM,CAACV,KAAtB;AACAa,cAAAA,IAAI,GAAG,IAAP;AACH;;AACD,gBAAIH,MAAM,CAACI,WAAX,EAAwB;AACpB,kBAAID,IAAJ,EAAUF,QAAQ,IAAI,OAAZ;AACVA,cAAAA,QAAQ,IAAI,+BAAZ;AACAC,cAAAA,MAAM,CAACE,WAAP,GAAqBJ,MAAM,CAACI,WAA5B;AACAD,cAAAA,IAAI,GAAG,IAAP;AACH;AACJ;;AACD,iBAAO;AACHF,YAAAA,QADG;AAEHC,YAAAA;AAFG,WAAP;AAIH;;AA/ByD,O;;gBAAjDtB,M;AAAAA,MAAAA,M,CACKyB,G,GAAc,IAAIzB,OAAJ,E","sourcesContent":["import { ICancelableExec } from \"../tsgf/ICancelable\";\nimport { IResult, Result } from \"../tsgf/Result\";\nimport { BaseBLL } from \"../tsgfServer/BaseBLL\";\nimport { OrderBy } from \"../tsgfServer/BaseDAL\";\nimport { AppDAL } from \"./DAL\";\nimport { IApp } from \"./Models\";\n\n/**简单应用管理(不需要走数据库)*/\nexport class SimpleAppHelper {\n    private static allApps: IApp[] = [\n        {\n            appId: 'default',\n            appName: '默认应用',\n            appSecret: 'FDGWPRET345-809RGKFER43SKGF',\n            addTime: new Date(Date.parse('2022-01-01'))\n        }\n    ];\n\n    public static selectAll(): ICancelableExec<IApp[]> {\n        return {\n            async cancel(): Promise<void> {\n            },\n            async waitResult(): Promise<IResult<IApp[]>> {\n                return Result.buildSucc(SimpleAppHelper.allApps);\n            }\n        }\n    }\n    public static selectSingleByAppId(appId: string): ICancelableExec<IApp | null> {\n        return {\n            async cancel(): Promise<void> {\n            },\n            async waitResult(): Promise<IResult<IApp | null>> {\n                return Result.buildSucc(SimpleAppHelper.allApps.find(a => a.appId == appId) ?? null);\n            }\n        }\n    }\n}\n\nexport interface AppSearch {\n    /**精确匹配*/\n    appId?: string | null;\n    /**模糊匹配匹配*/\n    appNameLike?: string | null;\n}\n\nexport class AppBLL extends BaseBLL<IApp, AppSearch, AppDAL>  {\n    public static Ins: AppBLL = new AppBLL();\n\n    protected getDAL() {\n        return new AppDAL();\n    }\n\n    protected buildWhereSql(search?: AppSearch): { whereSql: string | null, params: any } {\n        let whereSql = null;\n        let params: any = null;\n        if (search) {\n            whereSql = '';\n            params = {};\n            let hasA = false;\n            if (search.appId) {\n                if (hasA) whereSql += ' and ';\n                whereSql += 'app.appId=:appId';\n                params.appId = search.appId;\n                hasA = true;\n            }\n            if (search.appNameLike) {\n                if (hasA) whereSql += ' and ';\n                whereSql += 'app.appName like :appNameLike';\n                params.appNameLike = search.appNameLike;\n                hasA = true;\n            }\n        }\n        return {\n            whereSql,\n            params,\n        };\n    }\n}"]}