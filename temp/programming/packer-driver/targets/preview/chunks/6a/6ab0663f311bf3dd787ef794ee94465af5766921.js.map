{"version":3,"sources":["file:///E:/CocosProjects/Color/assets/ts-gameframework-master/servers/test/loadTest/matcherSingle.test.ts"],"names":["delay","authPlayerToken","requestMatchOneSingle","stopTime","Date","parse","test","auth1","auth2","auth3","playerToken1","playerToken","playerId1","playerId","playerToken2","playerId2","playerToken3","playerId3","now"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAESA,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,e,iBAAAA,e;AAA6BC,MAAAA,qB,iBAAAA,qB;;;;;;;AAElCC,MAAAA,Q,GAAWC,IAAI,CAACC,KAAL,CAAW,qBAAX,C;AAEfC,MAAAA,IAAI,CAAC,iBAAD,iCAAoB,aAAkB;AACtC,eADsC,CAC/B;;AACP,YAAMC,KAAK,SAAS;AAAA;AAAA,gDAAgB,yBAAhB,EAA2C,MAA3C,CAApB;AACA,YAAMC,KAAK,SAAS;AAAA;AAAA,gDAAgB,yBAAhB,EAA2C,MAA3C,CAApB;AACA,YAAMC,KAAK,SAAS;AAAA;AAAA,gDAAgB,yBAAhB,EAA2C,MAA3C,CAApB;AACA,YAAIC,YAAY,GAAGH,KAAK,CAACI,WAAzB;AACA,YAAIC,SAAS,GAAGL,KAAK,CAACM,QAAtB;AACA,YAAIC,YAAY,GAAGN,KAAK,CAACG,WAAzB;AACA,YAAII,SAAS,GAAGP,KAAK,CAACK,QAAtB;AACA,YAAIG,YAAY,GAAGP,KAAK,CAACE,WAAzB;AACA,YAAIM,SAAS,GAAGR,KAAK,CAACI,QAAtB;;AAEA,eAAOT,IAAI,CAACc,GAAL,KAAaf,QAApB,EAA8B;AAE1B,gBAAM;AAAA;AAAA,8DAAsBO,YAAtB,EAAoCE,SAApC,EAA+C,CAA/C,EAAkD,CAAlD,CAAN;AACA,gBAAM;AAAA;AAAA,8DAAsBE,YAAtB,EAAoCC,SAApC,EAA+C,CAA/C,EAAkD,CAAlD,CAAN;AACA,gBAAM;AAAA;AAAA,8DAAsBC,YAAtB,EAAoCC,SAApC,EAA+C,CAA/C,EAAkD,CAAlD,CAAN;AAEA,gBAAM;AAAA;AAAA,8BAAM,GAAN,CAAN;AACH;AAEJ,OArBG,GAqBDd,QAAQ,GAAGC,IAAI,CAACc,GAAL,EAAX,GAAwB,KArBvB,CAAJ","sourcesContent":["\nimport { assert } from 'chai';\nimport { delay } from '../../src/shared/tsgf/Utils';\nimport { authPlayerToken, queryMatch, requestMatchOneSingle } from '../unitTest/api/ApiUtils';\n\nlet stopTime = Date.parse('2022-06-20 14:00:00');\n\ntest('单人匹配器的负载_匹配不进房间', async function () {\n    return;// 不需要常规执行\n    const auth1 = await authPlayerToken(\"zum0001_单人匹配器的负载_匹配不进房间\", \"zum1\");\n    const auth2 = await authPlayerToken(\"zum0002_单人匹配器的负载_匹配不进房间\", \"zum2\");\n    const auth3 = await authPlayerToken(\"zum0003_单人匹配器的负载_匹配不进房间\", \"zum3\");\n    let playerToken1 = auth1.playerToken;\n    let playerId1 = auth1.playerId;\n    let playerToken2 = auth2.playerToken;\n    let playerId2 = auth2.playerId;\n    let playerToken3 = auth3.playerToken;\n    let playerId3 = auth3.playerId;\n\n    while (Date.now() < stopTime) {\n\n        await requestMatchOneSingle(playerToken1, playerId1, 3, 3);\n        await requestMatchOneSingle(playerToken2, playerId2, 3, 3);\n        await requestMatchOneSingle(playerToken3, playerId3, 3, 3);\n        \n        await delay(100);\n    }\n\n}, stopTime - Date.now() + 50000);\n"]}